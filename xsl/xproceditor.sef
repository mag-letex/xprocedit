<?xml version="1.0" encoding="utf-8"?>
<package xmlns="http://ns.saxonica.com/xslt/export" xmlns:fn="http://www.w3.org/2005/xpath-functions" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:vv="http://saxon.sf.net/generated-variable" xmlns:java-type="http://saxon.sf.net/java-type" version="30" packageVersion="1" saxonVersion="9.8.0.12" target="JS" targetVersion="1" relocatable="true">
 <co id="0" vis="PUBLIC" binds="">
  <globalParam name="Q{}json" type="item()" line="14" module="xproceditor-noninteractive.xsl" visibility="PUBLIC" flags="i" jsAcceptor="return val;" jsCardCheck="function c(n) {return n==1;};"/>
 </co>
 <co id="1" binds="">
  <template name="Q{}connections" flags="os" line="451" module="xproceditor-noninteractive.xsl" slots="1">
   <sequence role="body" defaultElementNS="http://www.w3.org/1999/xhtml" ns="xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="452">
    <param name="Q{}connections" slot="0" as="element(Q{http://www.w3.org/2005/xpath-functions}devs.StandLink)*">
     <empty role="select"/>
     <treat role="conversion" as="element(Q{http://www.w3.org/2005/xpath-functions}devs.StandLink)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='devs.StandLink';" diag="8|0|XTTE0590|connections">
      <supplied slot="0"/>
     </treat>
    </param>
    <forEachGroup line="453" algorithm="by">
     <varRef role="select" name="connections" slot="0"/>
     <data role="key">
      <slash>
       <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}target)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='target';"/>
       <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}port)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='port';"/>
      </slash>
     </data>
     <str role="collation" val="http://www.w3.org/2005/xpath-functions/collation/codepoint"/>
     <compElem role="content" line="454">
      <str role="name" val="p:input"/>
      <sequence role="content" line="455">
       <att name="port" flags="l">
        <fn name="string-join">
         <convert from="xs:anyAtomicType" to="xs:string">
          <currentGroupingKey/>
         </convert>
         <str val=" "/>
        </fn>
       </att>
       <forEach line="456">
        <currentGroup/>
        <elem xmlns:p="http://www.w3.org/ns/xproc" line="457" name="p:pipe" nsuri="http://www.w3.org/ns/xproc" flags="l" namespaces="p">
         <sequence>
          <att name="step" flags="l">
           <fn name="string-join">
            <convert from="xs:untypedAtomic" to="xs:string">
             <data>
              <slash>
               <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}source)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='source';"/>
               <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}id)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='id';"/>
              </slash>
             </data>
            </convert>
            <str val=" "/>
           </fn>
          </att>
          <att name="port" flags="l">
           <fn name="string-join">
            <convert from="xs:untypedAtomic" to="xs:string">
             <data>
              <slash>
               <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}source)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='source';"/>
               <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}port)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='port';"/>
              </slash>
             </data>
            </convert>
            <str val=" "/>
           </fn>
          </att>
         </sequence>
        </elem>
       </forEach>
      </sequence>
     </compElem>
    </forEachGroup>
   </sequence>
  </template>
 </co>
 <co id="2" binds="">
  <globalVariable name="Q{}serialization-params" type="element(Q{http://www.w3.org/2010/xslt-xquery-serialization}serialization-parameters)" line="193" module="xproceditor-noninteractive.xsl" visibility="PRIVATE" jsAcceptor="function test(item) {function a() {var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2010/xslt-xquery-serialization'&amp;&amp;q.local==='serialization-parameters';};function b() {function a() {var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2010/xslt-xquery-serialization'&amp;&amp;q.local==='serialization-parameters';};function b() {return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;};return a()&amp;&amp;b();};return a()&amp;&amp;b();};if (test(val)) {return val;} else {throw SaxonJS.XError('Conversion failed', 'XTTE0590');}" jsCardCheck="function c(n) {return n==1;};">
   <treat defaultElementNS="http://www.w3.org/1999/xhtml" ns="xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="195" as="element(Q{http://www.w3.org/2010/xslt-xquery-serialization}serialization-parameters)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2010/xslt-xquery-serialization'&amp;&amp;q.local==='serialization-parameters';" diag="3|0|XTTE0570|serialization-params">
    <elem xmlns:output="http://www.w3.org/2010/xslt-xquery-serialization" name="output:serialization-parameters" nsuri="http://www.w3.org/2010/xslt-xquery-serialization" namespaces="p">
     <sequence>
      <elem name="output:indent" nsuri="http://www.w3.org/2010/xslt-xquery-serialization" flags="l" namespaces="p">
       <att name="value" flags="l">
        <str val="yes"/>
       </att>
      </elem>
      <elem line="196" name="output:omit-xml-declaration" nsuri="http://www.w3.org/2010/xslt-xquery-serialization" flags="l" namespaces="p">
       <att name="value" flags="l">
        <str val="no"/>
       </att>
      </elem>
     </sequence>
    </elem>
   </treat>
  </globalVariable>
 </co>
 <co id="3" binds="4 5 6">
  <template name="Q{}create-xpl-noninteractive" flags="os" line="32" module="xproceditor-noninteractive.xsl" slots="9">
   <sequence role="body" defaultElementNS="http://www.w3.org/1999/xhtml" ns="xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="33">
    <param name="Q{}graph-as-json" slot="0" flags="i" as="xs:string">
     <treat role="conversion" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="8|0|XTTE0590|graph-as-json">
      <check card="1" diag="8|0|XTTE0590|graph-as-json">
       <cvUntyped to="xs:string">
        <data>
         <supplied slot="0"/>
        </data>
       </cvUntyped>
      </check>
     </treat>
    </param>
    <param line="34" name="Q{}retain-layout" slot="1" flags="t" as="xs:boolean">
     <false role="select"/>
     <treat role="conversion" as="xs:boolean" jsTest="return SaxonJS.U.Atomic.boolean.matches(item);" diag="8|0|XTTE0590|retain-layout">
      <check card="1" diag="8|0|XTTE0590|retain-layout">
       <cvUntyped to="xs:boolean">
        <data>
         <supplied slot="1"/>
        </data>
       </cvUntyped>
      </check>
     </treat>
    </param>
    <param line="35" name="Q{}optimize-for-editing" slot="2" flags="t" as="xs:boolean">
     <true role="select"/>
     <treat role="conversion" as="xs:boolean" jsTest="return SaxonJS.U.Atomic.boolean.matches(item);" diag="8|0|XTTE0590|optimize-for-editing">
      <check card="1" diag="8|0|XTTE0590|optimize-for-editing">
       <cvUntyped to="xs:boolean">
        <data>
         <supplied slot="2"/>
        </data>
       </cvUntyped>
      </check>
     </treat>
    </param>
    <param line="36" name="Q{}generate-debug-info" slot="3" flags="t" as="xs:boolean">
     <false role="select"/>
     <treat role="conversion" as="xs:boolean" jsTest="return SaxonJS.U.Atomic.boolean.matches(item);" diag="8|0|XTTE0590|generate-debug-info">
      <check card="1" diag="8|0|XTTE0590|generate-debug-info">
       <cvUntyped to="xs:boolean">
        <data>
         <supplied slot="3"/>
        </data>
       </cvUntyped>
      </check>
     </treat>
    </param>
    <let line="39" var="graph" as="document-node(element(Q{http://www.w3.org/2005/xpath-functions}array))" slot="4" eval="7">
     <treat as="document-node(element(Q{http://www.w3.org/2005/xpath-functions}array))" jsTest="function e(item) {var q=SaxonJS.U.nameOfNode(item); return q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='array';};return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===9 || item.nodeType===11) &amp;&amp; SaxonJS.U.Axis.child(item).filter(e).next();" diag="3|0|XTTE0570|graph">
      <check card="1" diag="3|0|XTTE0570|graph">
       <fn name="json-to-xml">
        <varRef name="graph-as-json" slot="0"/>
       </fn>
      </check>
     </treat>
     <sequence line="41">
      <choose>
       <varRef name="generate-debug-info" slot="3"/>
       <sequence line="42">
        <message>
         <sequence role="select">
          <str val="########JSON GRAPH: "/>
          <varRef name="graph-as-json" slot="0"/>
         </sequence>
         <str role="terminate" val="no"/>
         <str role="error" val="Q{http://www.w3.org/2005/xqt-errors}XTMM9000"/>
        </message>
        <message line="43">
         <sequence role="select">
          <str val="########XML GRAPH: "/>
          <fn name="serialize">
           <varRef name="graph" slot="4"/>
          </fn>
         </sequence>
         <str role="terminate" val="no"/>
         <str role="error" val="Q{http://www.w3.org/2005/xqt-errors}XTMM9000"/>
        </message>
       </sequence>
      </choose>
      <let line="46" var="simplify-json-representation" as="document-node(element(Q{http://www.w3.org/2005/xpath-functions}doc))" slot="5" eval="7">
       <treat line="48" as="document-node(element(Q{http://www.w3.org/2005/xpath-functions}doc))" jsTest="function e(item) {var q=SaxonJS.U.nameOfNode(item); return q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='doc';};return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===9 || item.nodeType===11) &amp;&amp; SaxonJS.U.Axis.child(item).filter(e).next();" diag="3|0|XTTE0570|simplify-json-representation">
        <doc>
         <applyT mode="Q{}simplify-json-representation" bSlot="0">
          <varRef role="select" name="graph" slot="4"/>
          <withParam name="Q{}retain-layout" flags="t" as="xs:boolean">
           <varRef line="50" name="retain-layout" slot="1"/>
          </withParam>
         </applyT>
        </doc>
       </treat>
       <sequence line="55">
        <choose>
         <varRef name="generate-debug-info" slot="3"/>
         <message line="56">
          <sequence role="select">
           <str val="########SIMPLIFY: "/>
           <fn name="serialize">
            <varRef name="simplify-json-representation" slot="5"/>
           </fn>
          </sequence>
          <str role="terminate" val="no"/>
          <str role="error" val="Q{http://www.w3.org/2005/xqt-errors}XTMM9000"/>
         </message>
        </choose>
        <let line="59" var="xprocify" as="document-node()" slot="6" eval="7">
         <doc line="60" validation="preserve">
          <applyT mode="Q{}xprocify" bSlot="1">
           <varRef role="select" name="simplify-json-representation" slot="5"/>
          </applyT>
         </doc>
         <let line="65" var="clean" as="document-node()" slot="7" eval="7">
          <doc line="66" validation="preserve">
           <let var="prelim" as="element(Q{http://www.w3.org/ns/xproc}declare-step)" slot="8" eval="7">
            <treat line="67" as="element(Q{http://www.w3.org/ns/xproc}declare-step)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/ns/xproc'&amp;&amp;q.local==='declare-step';" diag="3|0|XTTE0570|prelim">
             <check card="1" diag="3|0|XTTE0570|prelim">
              <applyT mode="Q{}clean" bSlot="2">
               <varRef role="select" name="xprocify" slot="6"/>
              </applyT>
             </check>
            </treat>
            <forEach line="69">
             <varRef name="prelim" slot="8"/>
             <copy line="71" flags="cinl">
              <sequence role="content">
               <copyOf flags="vc">
                <sequence>
                 <axis name="attribute" nodeTest="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
                 <axis name="child" nodeTest="( element() | text() | comment() | processing-instruction() )" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===1 || item.nodeType===3 || item.nodeType===7 || item.nodeType===8);"/>
                </sequence>
               </copyOf>
               <choose line="72">
                <varRef name="generate-debug-info" slot="3"/>
                <sequence line="73">
                 <elem xmlns:p="http://www.w3.org/ns/xproc" name="p:documentation" nsuri="http://www.w3.org/ns/xproc" flags="l" namespaces="p">
                  <valueOf flags="l">
                   <str val="Simplified XML representation of the JSON model"/>
                  </valueOf>
                 </elem>
                 <elem xmlns:p="http://www.w3.org/ns/xproc" line="75" name="p:pipeinfo" nsuri="http://www.w3.org/ns/xproc" flags="l" namespaces="p">
                  <varRef name="simplify-json-representation" slot="5"/>
                 </elem>
                 <elem xmlns:p="http://www.w3.org/ns/xproc" line="77" name="p:documentation" nsuri="http://www.w3.org/ns/xproc" flags="l" namespaces="p">
                  <valueOf flags="Sl">
                   <str val="JSON"/>
                  </valueOf>
                 </elem>
                 <elem xmlns:p="http://www.w3.org/ns/xproc" line="80" name="p:pipeinfo" nsuri="http://www.w3.org/ns/xproc" flags="l" namespaces="p">
                  <elem name="json" nsuri="" flags="l" namespaces="p">
                   <varRef name="graph-as-json" slot="0"/>
                  </elem>
                 </elem>
                </sequence>
               </choose>
              </sequence>
             </copy>
            </forEach>
           </let>
          </doc>
          <sequence line="89">
           <choose>
            <varRef name="generate-debug-info" slot="3"/>
            <message line="90">
             <sequence role="select">
              <str val="########XPROCIFY: "/>
              <fn name="serialize">
               <varRef name="xprocify" slot="6"/>
              </fn>
             </sequence>
             <str role="terminate" val="no"/>
             <str role="error" val="Q{http://www.w3.org/2005/xqt-errors}XTMM9000"/>
            </message>
           </choose>
           <varRef line="95" name="clean" slot="7"/>
          </sequence>
         </let>
        </let>
       </sequence>
      </let>
     </sequence>
    </let>
   </sequence>
  </template>
 </co>
 <co id="7" binds="8 9 10">
  <template name="Q{}process-subpipeline" flags="os" line="220" module="xproceditor-noninteractive.xsl" slots="8">
   <sequence role="body" defaultElementNS="http://www.w3.org/1999/xhtml" ns="xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="221">
    <param name="Q{}optimize-for-editing" slot="0" flags="t" as="xs:boolean">
     <true role="select"/>
     <treat role="conversion" as="xs:boolean" jsTest="return SaxonJS.U.Atomic.boolean.matches(item);" diag="8|0|XTTE0590|optimize-for-editing">
      <check card="1" diag="8|0|XTTE0590|optimize-for-editing">
       <cvUntyped to="xs:boolean">
        <data>
         <supplied slot="0"/>
        </data>
       </cvUntyped>
      </check>
     </treat>
    </param>
    <param line="222" name="Q{}generate-debug-info" slot="1" flags="t" as="xs:boolean">
     <false role="select"/>
     <treat role="conversion" as="xs:boolean" jsTest="return SaxonJS.U.Atomic.boolean.matches(item);" diag="8|0|XTTE0590|generate-debug-info">
      <check card="1" diag="8|0|XTTE0590|generate-debug-info">
       <cvUntyped to="xs:boolean">
        <data>
         <supplied slot="1"/>
        </data>
       </cvUntyped>
      </check>
     </treat>
    </param>
    <let line="224" var="to-be-processed" as="element()*" slot="2" eval="3">
     <treat as="element()" jsTest="return item.nodeType===1;" diag="3|0|XTTE0570|to-be-processed">
      <filter flags="b">
       <fn name="key">
        <str val="step-by-id"/>
        <data>
         <slash>
          <slash simple="1">
           <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
            <dot flags="a"/>
           </treat>
           <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}embeds)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='embeds';"/>
          </slash>
          <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}value)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='value';"/>
         </slash>
        </data>
       </fn>
       <gc op="=" card="N:1" comp="CCC">
        <literal count="3">
         <str val="xproc.Atomic"/>
         <str val="xproc.Compound"/>
         <str val="xproc.Variable"/>
        </literal>
        <fn name="local-name">
         <dot type="node()"/>
        </fn>
       </gc>
      </filter>
     </treat>
     <let line="266" var="plan-with-prelim-positions" as="document-node(element(Q{http://www.w3.org/2005/xpath-functions}plan))" slot="3" eval="7">
      <treat line="267" as="document-node(element(Q{http://www.w3.org/2005/xpath-functions}plan))" jsTest="function e(item) {var q=SaxonJS.U.nameOfNode(item); return q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='plan';};return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===9 || item.nodeType===11) &amp;&amp; SaxonJS.U.Axis.child(item).filter(e).next();" diag="3|0|XTTE0570|plan-with-prelim-positions">
       <doc>
        <applyT mode="Q{}plan-add-prelim-position" bSlot="0">
         <treat role="select" ns="=http://www.w3.org/2005/xpath-functions xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="228" as="document-node(element(Q{http://www.w3.org/2005/xpath-functions}plan))" jsTest="function e(item) {var q=SaxonJS.U.nameOfNode(item); return q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='plan';};return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===9 || item.nodeType===11) &amp;&amp; SaxonJS.U.Axis.child(item).filter(e).next();" diag="3|0|XTTE0570|plan">
          <doc>
           <elem name="plan" nsuri="http://www.w3.org/2005/xpath-functions" flags="dl" namespaces="p">
            <forEachGroup algorithm="by">
             <ufCall role="select" name="Q{bogo:my}plan" tailCall="false" bSlot="1" eval="11 4">
              <sequence>
               <treat as="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;" diag="0|0||my:plan">
                <dot flags="a"/>
               </treat>
               <varRef name="to-be-processed" slot="2"/>
              </sequence>
              <check card="1" diag="0|1||my:plan">
               <cvUntyped to="xs:string">
                <data>
                 <slash simple="1">
                  <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
                   <dot flags="a"/>
                  </treat>
                  <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}stepId)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='stepId';"/>
                 </slash>
                </data>
               </cvUntyped>
              </check>
             </ufCall>
             <attVal role="key" name="Q{}id" chk="0"/>
             <str role="collation" val="http://www.w3.org/2005/xpath-functions/collation/codepoint"/>
             <dot role="content" line="229" type="element(Q{http://www.w3.org/2005/xpath-functions}plan-item)"/>
            </forEachGroup>
           </elem>
          </doc>
         </treat>
        </applyT>
       </doc>
      </treat>
      <sequence line="269">
       <message>
        <sequence role="select">
         <str val="PPPPPPPPPPPPPPP "/>
         <varRef name="plan-with-prelim-positions" slot="3"/>
        </sequence>
        <str role="terminate" val="no"/>
        <str role="error" val="Q{http://www.w3.org/2005/xqt-errors}XTMM9000"/>
       </message>
       <let line="270" var="plan-with-positions" as="element(Q{http://www.w3.org/2005/xpath-functions}plan)" slot="4" eval="7">
        <treat line="271" as="element(Q{http://www.w3.org/2005/xpath-functions}plan)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='plan';" diag="3|0|XTTE0570|plan-with-positions">
         <check card="1" diag="3|0|XTTE0570|plan-with-positions">
          <applyT mode="Q{}plan-add-position" bSlot="2">
           <varRef role="select" name="plan-with-prelim-positions" slot="3"/>
           <withParam name="Q{}max-distance" flags="t" as="xs:integer">
            <check line="273" card="1" diag="8|0|XTTE0590|max-distance">
             <cast as="xs:integer" emptiable="1">
              <fn name="max">
               <data>
                <slash>
                 <slash simple="1">
                  <varRef name="plan-with-prelim-positions" slot="3"/>
                  <axis name="descendant-or-self" nodeTest="element()" jsTest="return item.nodeType===1;"/>
                 </slash>
                 <axis name="attribute" nodeTest="attribute(Q{}ppos)" jsTest="return item.name==='ppos'"/>
                </slash>
               </data>
              </fn>
             </cast>
            </check>
           </withParam>
          </applyT>
         </check>
        </treat>
        <let ns="=http://www.w3.org/2005/xpath-functions xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="276" var="sorted-plan-items" as="document-node(element(Q{http://www.w3.org/2005/xpath-functions}plan))" slot="5" eval="7">
         <treat line="278" as="document-node(element(Q{http://www.w3.org/2005/xpath-functions}plan))" jsTest="function e(item) {var q=SaxonJS.U.nameOfNode(item); return q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='plan';};return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===9 || item.nodeType===11) &amp;&amp; SaxonJS.U.Axis.child(item).filter(e).next();" diag="3|0|XTTE0570|sorted-plan-items">
          <doc>
           <elem name="plan" nsuri="http://www.w3.org/2005/xpath-functions" flags="dl" namespaces="p">
            <sequence>
             <att name="sorted" flags="l">
              <str val="true"/>
             </att>
             <sort line="279">
              <slash role="select" simple="1">
               <varRef name="plan-with-positions" slot="4"/>
               <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
              </slash>
              <sortKey line="284" comp="DecSC">
               <cast role="select" as="xs:integer" emptiable="1">
                <data>
                 <first>
                  <sequence>
                   <slash simple="1">
                    <filter flags="b">
                     <axis name="self" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}plan-item)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='plan-item';"/>
                     <fn name="exists">
                      <axis name="attribute" nodeTest="attribute(Q{}container)" jsTest="return item.name==='container'"/>
                     </fn>
                    </filter>
                    <axis name="attribute" nodeTest="attribute(Q{}pos)" jsTest="return item.name==='pos'"/>
                   </slash>
                   <slash simple="1">
                    <slash>
                     <axis name="self" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}plan-item)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='plan-item';"/>
                     <first>
                      <filter flags="b">
                       <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}sort-before)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='sort-before';"/>
                       <fn name="empty">
                        <axis name="attribute" nodeTest="attribute(Q{}primary)" jsTest="return item.name==='primary'"/>
                       </fn>
                      </filter>
                     </first>
                    </slash>
                    <axis name="attribute" nodeTest="attribute(Q{}pos)" jsTest="return item.name==='pos'"/>
                   </slash>
                   <slash>
                    <filter flags="b">
                     <slash simple="1">
                      <axis name="self" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}plan-item)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='plan-item';"/>
                      <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}sort-before)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='sort-before';"/>
                     </slash>
                     <fn name="empty">
                      <axis module="xproceditor-noninteractive.xsl" line="284" name="following-sibling" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}sort-before)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='sort-before';"/>
                     </fn>
                    </filter>
                    <axis name="attribute" nodeTest="attribute(Q{}pos)" jsTest="return item.name==='pos'"/>
                   </slash>
                   <axis name="attribute" nodeTest="attribute(Q{}pos)" jsTest="return item.name==='pos'"/>
                  </sequence>
                 </first>
                </data>
               </cast>
               <str role="order" val="ascending"/>
               <str role="lang" val=""/>
               <str role="caseOrder" val="#default"/>
               <str role="stable" val="yes"/>
               <str role="collation" val="http://www.w3.org/2005/xpath-functions/collation/codepoint"/>
              </sortKey>
              <sortKey line="288" comp="DESC|DecSC">
               <cast role="select" as="xs:integer" emptiable="1">
                <atomSing card="?" diag="2|0||cast as">
                 <first>
                  <sequence>
                   <slash simple="1">
                    <slash>
                     <axis name="self" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}plan-item)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='plan-item';"/>
                     <first>
                      <filter flags="b">
                       <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}sort-before)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='sort-before';"/>
                       <fn name="empty">
                        <axis name="attribute" nodeTest="attribute(Q{}primary)" jsTest="return item.name==='primary'"/>
                       </fn>
                      </filter>
                     </first>
                    </slash>
                    <axis name="attribute" nodeTest="attribute(Q{}distance)" jsTest="return item.name==='distance'"/>
                   </slash>
                   <slash>
                    <filter flags="b">
                     <slash simple="1">
                      <axis name="self" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}plan-item)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='plan-item';"/>
                      <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}sort-before)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='sort-before';"/>
                     </slash>
                     <fn name="empty">
                      <axis module="xproceditor-noninteractive.xsl" line="288" name="following-sibling" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}sort-before)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='sort-before';"/>
                     </fn>
                    </filter>
                    <axis name="attribute" nodeTest="attribute(Q{}distance)" jsTest="return item.name==='distance'"/>
                   </slash>
                   <int val="0"/>
                  </sequence>
                 </first>
                </atomSing>
               </cast>
               <str role="order" val="descending"/>
               <str role="lang" val=""/>
               <str role="caseOrder" val="#default"/>
               <str role="stable" val="yes"/>
               <str role="collation" val="http://www.w3.org/2005/xpath-functions/collation/codepoint"/>
              </sortKey>
              <sortKey line="290" comp="DecSC">
               <cast role="select" as="xs:integer" emptiable="1">
                <fn name="min">
                 <for var="sb" as="element(Q{http://www.w3.org/2005/xpath-functions}sort-before)" slot="6">
                  <filter role="in" flags="b">
                   <filter flags="b">
                    <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}sort-before)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='sort-before';"/>
                    <fn name="exists">
                     <axis name="attribute" nodeTest="attribute(Q{}distance)" jsTest="return item.name==='distance'"/>
                    </fn>
                   </filter>
                   <fn name="exists">
                    <axis name="attribute" nodeTest="attribute(Q{}pos)" jsTest="return item.name==='pos'"/>
                   </fn>
                  </filter>
                  <arith role="return" op="-" calc="d-d">
                   <cvUntyped to="xs:double">
                    <data>
                     <slash simple="1">
                      <varRef name="sb" slot="6"/>
                      <axis name="attribute" nodeTest="attribute(Q{}pos)" jsTest="return item.name==='pos'"/>
                     </slash>
                    </data>
                   </cvUntyped>
                   <cvUntyped to="xs:double">
                    <data>
                     <slash simple="1">
                      <varRef name="sb" slot="6"/>
                      <axis name="attribute" nodeTest="attribute(Q{}distance)" jsTest="return item.name==='distance'"/>
                     </slash>
                    </data>
                   </cvUntyped>
                  </arith>
                 </for>
                </fn>
               </cast>
               <str role="order" val="ascending"/>
               <str role="lang" val=""/>
               <str role="caseOrder" val="#default"/>
               <str role="stable" val="yes"/>
               <str role="collation" val="http://www.w3.org/2005/xpath-functions/collation/codepoint"/>
              </sortKey>
             </sort>
            </sequence>
           </elem>
          </doc>
         </treat>
         <sequence ns="xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="295">
          <message>
           <sequence role="select">
            <str val="SSSSSSSSSS "/>
            <varRef name="sorted-plan-items" slot="5"/>
           </sequence>
           <str role="terminate" val="no"/>
           <str role="error" val="Q{http://www.w3.org/2005/xqt-errors}XTMM9000"/>
          </message>
          <choose line="302">
           <varRef name="generate-debug-info" slot="1"/>
           <message line="303">
            <sequence role="select">
             <str val="SORTED PLAN:"/>
             <varRef name="sorted-plan-items" slot="5"/>
            </sequence>
            <str role="terminate" val="no"/>
            <str role="error" val="Q{http://www.w3.org/2005/xqt-errors}XTMM9000"/>
           </message>
          </choose>
          <let line="306" var="plan" as="document-node(element(Q{http://www.w3.org/2005/xpath-functions}plan))" slot="7" eval="7">
           <choose line="308">
            <varRef name="optimize-for-editing" slot="0"/>
            <varRef line="309" name="sorted-plan-items" slot="5"/>
            <true/>
            <treat line="313" as="document-node(element(Q{http://www.w3.org/2005/xpath-functions}plan))" jsTest="function e(item) {var q=SaxonJS.U.nameOfNode(item); return q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='plan';};return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===9 || item.nodeType===11) &amp;&amp; SaxonJS.U.Axis.child(item).filter(e).next();" diag="3|0|XTTE0570|plan">
             <doc>
              <varRef name="plan-with-positions" slot="4"/>
             </doc>
            </treat>
           </choose>
           <applyT line="318" flags="ct" bSlot="-1">
            <filter role="select" flags="b">
             <slash>
              <slash simple="1">
               <varRef name="plan" slot="7"/>
               <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}plan)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='plan';"/>
              </slash>
              <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}plan-item)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='plan-item';"/>
             </slash>
             <fn name="exists">
              <axis name="attribute" nodeTest="attribute(Q{}container)" jsTest="return item.name==='container'"/>
             </fn>
            </filter>
            <withParam name="Q{}simplified-graph" flags="t" as="document-node(element(Q{http://www.w3.org/2005/xpath-functions}doc))">
             <treat line="319" as="document-node(element(Q{http://www.w3.org/2005/xpath-functions}doc))" jsTest="function e(item) {var q=SaxonJS.U.nameOfNode(item); return q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='doc';};return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===9 || item.nodeType===11) &amp;&amp; SaxonJS.U.Axis.child(item).filter(e).next();" diag="8|0|XTTE0590|simplified-graph">
              <fn name="root">
               <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="0|0||fn:root">
                <dot flags="a"/>
               </treat>
              </fn>
             </treat>
            </withParam>
            <withParam name="Q{}plan" flags="t" as="document-node(element(Q{http://www.w3.org/2005/xpath-functions}plan))">
             <varRef line="320" name="plan" slot="7"/>
            </withParam>
            <withParam name="Q{}container-id" flags="t" as="xs:string">
             <check line="321" card="1" diag="8|0|XTTE0590|container-id">
              <cvUntyped to="xs:string">
               <data>
                <slash simple="1">
                 <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
                  <dot flags="a"/>
                 </treat>
                 <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}stepId)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='stepId';"/>
                </slash>
               </data>
              </cvUntyped>
             </check>
            </withParam>
           </applyT>
          </let>
         </sequence>
        </let>
       </let>
      </sequence>
     </let>
    </let>
   </sequence>
  </template>
 </co>
 <co id="5" binds="1 11 7 12 12 1 7">
  <mode name="Q{}xprocify" onNo="TC" flags="W" patternSlots="0">
   <templateRule prec="0" prio="-10.0" seq="6" rank="0" minImp="0" slots="0" flags="s" line="664" module="xproceditor-noninteractive.xsl">
    <p.nodeTest role="match" test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;"/>
    <applyT role="action" defaultElementNS="http://www.w3.org/1999/xhtml" ns="xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="665" flags="ct" bSlot="-1">
     <axis role="select" name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
    </applyT>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="0" rank="1" minImp="0" slots="0" flags="s" line="209" module="xproceditor-noninteractive.xsl">
    <p.nodeTest role="match" test="element(Q{http://www.w3.org/2005/xpath-functions}doc)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='doc';"/>
    <applyT role="action" defaultElementNS="http://www.w3.org/1999/xhtml" ns="xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="210" flags="ct" bSlot="-1">
     <filter role="select" flags="b">
      <slash>
       <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}anonymous-array)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='anonymous-array';"/>
       <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}xproc.Pipeline)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='xproc.Pipeline';"/>
      </slash>
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}stepScope)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='stepScope';"/>
       </data>
       <str val="0"/>
      </gc>
     </filter>
    </applyT>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="3" rank="2" minImp="0" slots="5" flags="s" line="362" module="xproceditor-noninteractive.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="element(Q{http://www.w3.org/2005/xpath-functions}plan-item)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='plan-item';"/>
     <fn defaultElementNS="http://www.w3.org/1999/xhtml" ns="xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="362" name="empty">
      <axis name="attribute" nodeTest="attribute(Q{}container)" jsTest="return item.name==='container'"/>
     </fn>
    </p.withPredicate>
    <sequence role="action" defaultElementNS="http://www.w3.org/1999/xhtml" ns="xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="363">
     <param name="Q{}simplified-graph" slot="0" flags="ti" as="document-node(element(Q{http://www.w3.org/2005/xpath-functions}doc))">
      <treat role="conversion" as="document-node(element(Q{http://www.w3.org/2005/xpath-functions}doc))" jsTest="function e(item) {var q=SaxonJS.U.nameOfNode(item); return q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='doc';};return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===9 || item.nodeType===11) &amp;&amp; SaxonJS.U.Axis.child(item).filter(e).next();" diag="8|0|XTTE0590|simplified-graph">
       <check card="1" diag="8|0|XTTE0590|simplified-graph">
        <supplied slot="0"/>
       </check>
      </treat>
     </param>
     <param line="364" name="Q{}container-id" slot="1" flags="ti" as="xs:string">
      <treat role="conversion" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="8|0|XTTE0590|container-id">
       <check card="1" diag="8|0|XTTE0590|container-id">
        <cvUntyped to="xs:string">
         <data>
          <supplied slot="1"/>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </param>
     <let line="366" var="corresponding" as="element()" slot="2" eval="7">
      <treat as="element()" jsTest="return item.nodeType===1;" diag="3|0|XTTE0570|corresponding">
       <check card="1" diag="3|0|XTTE0570|corresponding">
        <filter flags="b">
         <fn name="key">
          <str val="step-by-id"/>
          <attVal name="Q{}id" chk="0"/>
          <varRef name="simplified-graph" slot="0"/>
         </fn>
         <gc op="=" card="N:1" comp="CCC">
          <data>
           <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}parent)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='parent';"/>
          </data>
          <varRef name="container-id" slot="1"/>
         </gc>
        </filter>
       </check>
      </treat>
      <sequence line="367">
       <compElem>
        <fn role="name" name="string-join">
         <convert from="xs:anyAtomicType" to="xs:string">
          <data>
           <first>
            <sequence>
             <slash simple="1">
              <varRef name="corresponding" slot="2"/>
              <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}text)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='text';"/>
             </slash>
             <str val="p:declare-step"/>
            </sequence>
           </first>
          </data>
         </convert>
         <str val=" "/>
        </fn>
        <sequence role="content" line="368">
         <att name="name" flags="l">
          <convert from="xs:untypedAtomic" to="xs:string">
           <attVal name="Q{}id" chk="0"/>
          </convert>
         </att>
         <applyT line="369" flags="c" bSlot="-1">
          <fn role="select" name="key">
           <str val="options"/>
           <attVal name="Q{}id" chk="0"/>
           <varRef name="simplified-graph" slot="0"/>
          </fn>
         </applyT>
         <applyT line="370" flags="c" bSlot="-1">
          <slash role="select" simple="1">
           <varRef name="corresponding" slot="2"/>
           <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}portData)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='portData';"/>
          </slash>
         </applyT>
         <callT line="371" name="connections" bSlot="0">
          <withParam name="Q{}connections" flags="c" as="element(Q{http://www.w3.org/2005/xpath-functions}devs.StandLink)*">
           <treat line="374" as="element(Q{http://www.w3.org/2005/xpath-functions}devs.StandLink)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='devs.StandLink';" diag="8|0|XTTE0590|connections">
            <filter flags="b">
             <filter flags="b">
              <fn name="key">
               <str val="connect-target"/>
               <data>
                <slash simple="1">
                 <varRef name="corresponding" slot="2"/>
                 <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}stepId)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='stepId';"/>
                </slash>
               </data>
               <varRef name="simplified-graph" slot="0"/>
              </fn>
              <fn name="not">
               <ufCall name="Q{bogo:my}is-primary-connection" tailCall="false" bSlot="1" eval="7">
                <treat as="element(Q{http://www.w3.org/2005/xpath-functions}devs.StandLink)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='devs.StandLink';" diag="0|0||my:is-primary-connection">
                 <dot type="node()"/>
                </treat>
               </ufCall>
              </fn>
             </filter>
             <gc op="=" card="N:1" comp="CCC">
              <data>
               <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}parent)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='parent';"/>
              </data>
              <varRef name="container-id" slot="1"/>
             </gc>
            </filter>
           </treat>
          </withParam>
         </callT>
         <choose line="376">
          <gc op="=" card="N:1" comp="CCC">
           <data>
            <slash simple="1">
             <varRef name="corresponding" slot="2"/>
             <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}text)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='text';"/>
            </slash>
           </data>
           <str val="p:xslt"/>
          </gc>
          <elem xmlns:p="http://www.w3.org/ns/xproc" line="378" name="p:input" nsuri="http://www.w3.org/ns/xproc" flags="l" namespaces="p">
           <sequence>
            <att name="port" flags="l">
             <str val="parameters"/>
            </att>
            <elem name="p:empty" nsuri="http://www.w3.org/ns/xproc" flags="l" namespaces="p">
             <empty/>
            </elem>
           </sequence>
          </elem>
         </choose>
         <let line="382" var="step-name" as="xs:string" slot="3" eval="7">
          <check card="1" diag="3|0|XTTE0570|step-name">
           <cvUntyped to="xs:string">
            <attVal name="Q{}id" chk="0"/>
           </cvUntyped>
          </check>
          <forEach line="383">
           <check line="381" card="?" diag="3|0|XTTE0570|subpipeline">
            <docOrder intra="1">
             <slash>
              <fn name="key">
               <str val="step-by-id"/>
               <attVal name="Q{}id" chk="0"/>
               <varRef name="simplified-graph" slot="0"/>
              </fn>
              <axis name="self" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}xproc.Pipeline)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='xproc.Pipeline';"/>
             </slash>
            </docOrder>
           </check>
           <let line="384" var="prelim" as="element()" slot="4" eval="7">
            <treat line="385" as="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;" diag="3|0|XTTE0570|prelim">
             <check card="1" diag="3|0|XTTE0570|prelim">
              <callT name="process-subpipeline" bSlot="2"/>
             </check>
            </treat>
            <applyT line="387" mode="Q{}xprocify-post" bSlot="3">
             <varRef role="select" name="prelim" slot="4"/>
             <withParam name="Q{}step-name" flags="t" as="xs:string">
              <varRef line="388" name="step-name" slot="3"/>
             </withParam>
            </applyT>
           </let>
          </forEach>
         </let>
        </sequence>
       </compElem>
       <choose line="394">
        <and op="and">
         <fn name="empty">
          <slash>
           <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}connection)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='connection';"/>
           <axis name="attribute" nodeTest="attribute(Q{}primary)" jsTest="return item.name==='primary'"/>
          </slash>
         </fn>
         <gc op="=" card="N:1" comp="CCC">
          <data>
           <slash>
            <filter flags="b">
             <slash>
              <slash simple="1">
               <varRef name="corresponding" slot="2"/>
               <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}portData)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='portData';"/>
              </slash>
              <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}anonymous-map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='anonymous-map';"/>
             </slash>
             <gc op="=" card="N:1" comp="CCC">
              <data>
               <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}portGroup)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='portGroup';"/>
              </data>
              <str val="out"/>
             </gc>
            </filter>
            <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}portPrimary)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='portPrimary';"/>
           </slash>
          </data>
          <str val="true"/>
         </gc>
        </and>
        <elem xmlns:p="http://www.w3.org/ns/xproc" name="p:sink" nsuri="http://www.w3.org/ns/xproc" namespaces="p">
         <empty/>
        </elem>
       </choose>
       <applyT line="397" flags="ct" bSlot="-1">
        <first role="select">
         <axis name="following-sibling" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </first>
       </applyT>
      </sequence>
     </let>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="2" rank="2" minImp="0" slots="6" flags="s" line="325" module="xproceditor-noninteractive.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="element(Q{http://www.w3.org/2005/xpath-functions}plan-item)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='plan-item';"/>
     <axis defaultElementNS="http://www.w3.org/1999/xhtml" ns="xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="325" name="attribute" nodeTest="attribute(Q{}container)" jsTest="return item.name==='container'"/>
    </p.withPredicate>
    <sequence role="action" defaultElementNS="http://www.w3.org/1999/xhtml" ns="xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="326">
     <param name="Q{}optimize-for-editing" slot="0" flags="t" as="xs:boolean?">
      <empty role="select"/>
      <treat role="conversion" as="xs:boolean" jsTest="return SaxonJS.U.Atomic.boolean.matches(item);" diag="8|0|XTTE0590|optimize-for-editing">
       <check card="?" diag="8|0|XTTE0590|optimize-for-editing">
        <cvUntyped to="xs:boolean">
         <data>
          <supplied slot="0"/>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </param>
     <param line="327" name="Q{}simplified-graph" slot="1" flags="ti" as="document-node(element(Q{http://www.w3.org/2005/xpath-functions}doc))">
      <treat role="conversion" as="document-node(element(Q{http://www.w3.org/2005/xpath-functions}doc))" jsTest="function e(item) {var q=SaxonJS.U.nameOfNode(item); return q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='doc';};return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===9 || item.nodeType===11) &amp;&amp; SaxonJS.U.Axis.child(item).filter(e).next();" diag="8|0|XTTE0590|simplified-graph">
       <check card="1" diag="8|0|XTTE0590|simplified-graph">
        <supplied slot="1"/>
       </check>
      </treat>
     </param>
     <param line="328" name="Q{}container-id" slot="2" flags="ti" as="xs:string">
      <treat role="conversion" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="8|0|XTTE0590|container-id">
       <check card="1" diag="8|0|XTTE0590|container-id">
        <cvUntyped to="xs:string">
         <data>
          <supplied slot="2"/>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </param>
     <param line="329" name="Q{}generate-debug-info" slot="3" flags="t" as="xs:boolean?">
      <empty role="select"/>
      <treat role="conversion" as="xs:boolean" jsTest="return SaxonJS.U.Atomic.boolean.matches(item);" diag="8|0|XTTE0590|generate-debug-info">
       <check card="?" diag="8|0|XTTE0590|generate-debug-info">
        <cvUntyped to="xs:boolean">
         <data>
          <supplied slot="3"/>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </param>
     <let line="331" var="corresponding" as="element(Q{http://www.w3.org/2005/xpath-functions}xproc.Pipeline)" slot="4" eval="7">
      <check card="1" diag="3|0|XTTE0570|corresponding">
       <docOrder intra="1">
        <slash>
         <filter flags="b">
          <fn name="key">
           <str val="step-by-id"/>
           <attVal name="Q{}id" chk="0"/>
           <varRef name="simplified-graph" slot="1"/>
          </fn>
          <gc op="=" card="N:1" comp="CCC">
           <data>
            <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}stepId)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='stepId';"/>
           </data>
           <varRef name="container-id" slot="2"/>
          </gc>
         </filter>
         <axis name="self" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}xproc.Pipeline)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='xproc.Pipeline';"/>
        </slash>
       </docOrder>
      </check>
      <let line="333" var="prelim" as="element(*, Q{http://www.w3.org/2001/XMLSchema}untyped)" slot="5" eval="7">
       <compElem line="334">
        <fn role="name" name="string-join">
         <convert from="xs:anyAtomicType" to="xs:string">
          <data>
           <first>
            <sequence>
             <slash simple="1">
              <varRef name="corresponding" slot="4"/>
              <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}text)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='text';"/>
             </slash>
             <str val="p:declare-step"/>
            </sequence>
           </first>
          </data>
         </convert>
         <str val=" "/>
        </fn>
        <sequence role="content" line="335">
         <choose>
          <fn name="empty">
           <slash simple="1">
            <varRef name="corresponding" slot="4"/>
            <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}text)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='text';"/>
           </slash>
          </fn>
          <sequence line="336">
           <att name="version" flags="l">
            <str val="1.0"/>
           </att>
           <att line="337" name="name" flags="l">
            <fn name="string-join">
             <convert from="xs:untypedAtomic" to="xs:string">
              <data>
               <slash simple="1">
                <varRef name="corresponding" slot="4"/>
                <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}stepId)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='stepId';"/>
               </slash>
              </data>
             </convert>
             <str val=" "/>
            </fn>
           </att>
          </sequence>
         </choose>
         <applyT line="339" flags="c" bSlot="-1">
          <slash role="select" simple="1">
           <varRef name="corresponding" slot="4"/>
           <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}portData)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='portData';"/>
          </slash>
         </applyT>
         <applyT line="341" flags="c" bSlot="-1">
          <filter role="select" flags="b">
           <fn name="key">
            <str val="options"/>
            <data>
             <slash simple="1">
              <varRef name="corresponding" slot="4"/>
              <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}stepId)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='stepId';"/>
             </slash>
            </data>
            <varRef name="simplified-graph" slot="1"/>
           </fn>
           <gc op="=" card="N:1" comp="CCC">
            <data>
             <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}paren)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='paren';"/>
            </data>
            <varRef name="container-id" slot="2"/>
           </gc>
          </filter>
          <withParam name="Q{}global" as="xs:boolean">
           <fn line="343" name="exists">
            <filter flags="b">
             <slash simple="1">
              <varRef name="corresponding" slot="4"/>
              <axis name="self" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}xproc.Pipeline)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='xproc.Pipeline';"/>
             </slash>
             <gc op="=" card="N:1" comp="CCC">
              <data>
               <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}stepScope)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='stepScope';"/>
              </data>
              <str val="0"/>
             </gc>
            </filter>
           </fn>
          </withParam>
         </applyT>
         <applyT line="345" flags="c" bSlot="-1">
          <first role="select">
           <axis name="following-sibling" nodeTest="element()" jsTest="return item.nodeType===1;"/>
          </first>
         </applyT>
        </sequence>
       </compElem>
       <applyT line="349" mode="Q{}xprocify-post" flags="t" bSlot="4">
        <varRef role="select" name="prelim" slot="5"/>
        <withParam name="Q{}step-name" flags="t" as="xs:string">
         <check line="332" card="1" diag="3|0|XTTE0570|step-name">
          <cvUntyped to="xs:string">
           <attVal name="Q{}id" chk="0"/>
          </cvUntyped>
         </check>
        </withParam>
        <withParam name="Q{}pipeinfo" flags="t" as="element()*">
         <choose line="352">
          <varRef name="generate-debug-info" slot="3"/>
          <sequence line="353">
           <elem xmlns:p="http://www.w3.org/ns/xproc" name="p:documentation" nsuri="http://www.w3.org/ns/xproc" namespaces="p">
            <valueOf flags="l">
             <str val="Ordering plan"/>
            </valueOf>
           </elem>
           <elem xmlns:p="http://www.w3.org/ns/xproc" line="355" name="p:pipeinfo" nsuri="http://www.w3.org/ns/xproc" namespaces="p">
            <fn name="root">
             <dot type="element(Q{http://www.w3.org/2005/xpath-functions}plan-item)"/>
            </fn>
           </elem>
          </sequence>
         </choose>
        </withParam>
       </applyT>
      </let>
     </let>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="1.0" seq="4" rank="3" minImp="0" slots="13" flags="s" line="592" module="xproceditor-noninteractive.xsl">
    <p.withUpper role="match" axis="parent" upFirst="false">
     <p.nodeTest test="element(Q{http://www.w3.org/2005/xpath-functions}anonymous-map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='anonymous-map';"/>
     <p.withUpper axis="parent" upFirst="false">
      <p.nodeTest test="element(Q{http://www.w3.org/2005/xpath-functions}portData)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='portData';"/>
      <p.nodeTest test="element(Q{http://www.w3.org/2005/xpath-functions}xproc.Pipeline)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='xproc.Pipeline';"/>
     </p.withUpper>
    </p.withUpper>
    <sequence role="action" defaultElementNS="http://www.w3.org/1999/xhtml" ns="xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="593">
     <param name="Q{}pipe-step-name" slot="0" flags="t" as="xs:string?">
      <empty role="select"/>
      <treat role="conversion" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="8|0|XTTE0590|pipe-step-name">
       <check card="?" diag="8|0|XTTE0590|pipe-step-name">
        <cvUntyped to="xs:string">
         <data>
          <supplied slot="0"/>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </param>
     <param line="594" name="Q{}plan" slot="1" flags="ti" as="document-node(element(Q{http://www.w3.org/2005/xpath-functions}plan))">
      <treat role="conversion" as="document-node(element(Q{http://www.w3.org/2005/xpath-functions}plan))" jsTest="function e(item) {var q=SaxonJS.U.nameOfNode(item); return q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='plan';};return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===9 || item.nodeType===11) &amp;&amp; SaxonJS.U.Axis.child(item).filter(e).next();" diag="8|0|XTTE0590|plan">
       <check card="1" diag="8|0|XTTE0590|plan">
        <supplied slot="1"/>
       </check>
      </treat>
     </param>
     <param line="595" name="Q{}simplified-graph" slot="2" flags="ti" as="document-node(element(Q{http://www.w3.org/2005/xpath-functions}doc))">
      <treat role="conversion" as="document-node(element(Q{http://www.w3.org/2005/xpath-functions}doc))" jsTest="function e(item) {var q=SaxonJS.U.nameOfNode(item); return q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='doc';};return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===9 || item.nodeType===11) &amp;&amp; SaxonJS.U.Axis.child(item).filter(e).next();" diag="8|0|XTTE0590|simplified-graph">
       <check card="1" diag="8|0|XTTE0590|simplified-graph">
        <supplied slot="2"/>
       </check>
      </treat>
     </param>
     <let line="596" var="port-type" as="xs:string" slot="3" eval="7">
      <check card="1" diag="3|0|XTTE0570|port-type">
       <cvUntyped to="xs:string">
        <data>
         <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}portGroup)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='portGroup';"/>
        </data>
       </cvUntyped>
      </check>
      <let line="597" var="port-name" as="element(Q{http://www.w3.org/2005/xpath-functions}portId)*" slot="4" eval="3">
       <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}portId)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='portId';"/>
       <let line="601" var="port-primary" as="xs:string" slot="5" eval="7">
        <let var="vv:current2122744920" as="element(Q{http://www.w3.org/2005/xpath-functions}anonymous-map)" slot="6" eval="7">
         <dot type="element(Q{http://www.w3.org/2005/xpath-functions}anonymous-map)"/>
         <let var="vv:v0" as="xs:boolean" slot="7" eval="13">
          <compareToInt op="eq" val="1">
           <fn name="count">
            <fn name="subsequence">
             <filter flags="b">
              <slash>
               <slash simple="1">
                <varRef name="vv:current2122744920" slot="6"/>
                <axis name="parent" nodeTest="(document-node()|element())" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===9||item.nodeType===11||item.nodeType===1);"/>
               </slash>
               <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}anonymous-map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='anonymous-map';"/>
              </slash>
              <gc op="=" card="N:1" comp="CCC">
               <data>
                <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}portGroup)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='portGroup';"/>
               </data>
               <varRef name="port-type" slot="3"/>
              </gc>
             </filter>
             <int val="1"/>
             <int val="2"/>
            </fn>
           </fn>
          </compareToInt>
          <treat as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="3|0|XTTE0570|port-primary">
           <check card="1" diag="3|0|XTTE0570|port-primary">
            <cvUntyped to="xs:string">
             <data>
              <first>
               <sequence>
                <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}portPrimary)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='portPrimary';"/>
                <filter flags="ib">
                 <str val="true"/>
                 <varRef name="vv:v0" slot="7"/>
                </filter>
               </sequence>
              </first>
             </data>
            </cvUntyped>
           </check>
          </treat>
         </let>
        </let>
        <let line="602" var="port-sequence" as="xs:string?" slot="8" eval="7">
         <check card="?" diag="3|0|XTTE0570|port-sequence">
          <cvUntyped to="xs:string">
           <data>
            <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}portSequence)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='portSequence';"/>
           </data>
          </cvUntyped>
         </check>
         <compElem line="603">
          <choose role="name">
           <vc op="eq" onEmpty="0" comp="CCC">
            <varRef name="port-type" slot="3"/>
            <str val="in"/>
           </vc>
           <str val="p:input"/>
           <true/>
           <str val="p:output"/>
          </choose>
          <sequence role="content" line="604">
           <att name="port" flags="l">
            <fn name="string-join">
             <convert from="xs:untypedAtomic" to="xs:string">
              <data>
               <varRef name="port-name" slot="4"/>
              </data>
             </convert>
             <str val=" "/>
            </fn>
           </att>
           <choose line="605">
            <varRef name="port-primary" slot="5"/>
            <sequence line="606">
             <att name="primary" flags="l">
              <varRef name="port-primary" slot="5"/>
             </att>
             <choose line="607">
              <varRef name="port-sequence" slot="8"/>
              <att line="608" name="sequence" flags="l">
               <varRef name="port-sequence" slot="8"/>
              </att>
             </choose>
             <choose line="610">
              <vc op="eq" onEmpty="0" comp="CCC">
               <varRef name="port-type" slot="3"/>
               <str val="out"/>
              </vc>
              <let line="619" var="vv:v2" as="xs:untypedAtomic*" slot="9" eval="4">
               <data>
                <varRef name="port-name" slot="4"/>
               </data>
               <let line="612" var="container" as="element(Q{http://www.w3.org/2005/xpath-functions}plan-item)" slot="10" eval="7">
                <check card="1" diag="3|0|XTTE0570|container">
                 <filter flags="b">
                  <slash>
                   <slash simple="1">
                    <varRef name="plan" slot="1"/>
                    <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}plan)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='plan';"/>
                   </slash>
                   <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}plan-item)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='plan-item';"/>
                  </slash>
                  <fn name="exists">
                   <axis name="attribute" nodeTest="attribute(Q{}container)" jsTest="return item.name==='container'"/>
                  </fn>
                 </filter>
                </check>
                <let line="616" var="vv:v1" as="xs:untypedAtomic?" slot="11" eval="13">
                 <data>
                  <slash simple="1">
                   <varRef name="container" slot="10"/>
                   <axis name="attribute" nodeTest="attribute(Q{}id)" jsTest="return item.name==='id'"/>
                  </slash>
                 </data>
                 <let line="613" var="out-connections" as="element(Q{http://www.w3.org/ns/xproc}input)*" slot="12" eval="8">
                  <treat line="614" as="element(Q{http://www.w3.org/ns/xproc}input)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/ns/xproc'&amp;&amp;q.local==='input';" diag="3|0|XTTE0570|out-connections">
                   <callT name="connections" bSlot="5">
                    <withParam name="Q{}connections" flags="c" as="element(Q{http://www.w3.org/2005/xpath-functions}devs.StandLink)*">
                     <treat line="616" as="element(Q{http://www.w3.org/2005/xpath-functions}devs.StandLink)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='devs.StandLink';" diag="8|0|XTTE0590|connections">
                      <filter flags="b">
                       <fn name="key">
                        <str val="connect-target"/>
                        <data>
                         <slash simple="1">
                          <varRef name="container" slot="10"/>
                          <axis name="attribute" nodeTest="attribute(Q{}id)" jsTest="return item.name==='id'"/>
                         </slash>
                        </data>
                        <varRef name="simplified-graph" slot="2"/>
                       </fn>
                       <gc op="=" card="N:1" comp="CCC">
                        <data>
                         <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}parent)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='parent';"/>
                        </data>
                        <varRef name="vv:v1" slot="11"/>
                       </gc>
                      </filter>
                     </treat>
                    </withParam>
                   </callT>
                  </treat>
                  <docOrder line="619" intra="0">
                   <slash>
                    <filter flags="b">
                     <varRef name="out-connections" slot="12"/>
                     <gc op="=" card="N:1" comp="CCC">
                      <varRef name="vv:v2" slot="9"/>
                      <attVal name="Q{}port" chk="0"/>
                     </gc>
                    </filter>
                    <axis name="child" nodeTest="element(Q{http://www.w3.org/ns/xproc}pipe)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/ns/xproc'&amp;&amp;q.local==='pipe';"/>
                   </slash>
                  </docOrder>
                 </let>
                </let>
               </let>
              </let>
             </choose>
            </sequence>
           </choose>
           <choose line="622">
            <varRef name="pipe-step-name" slot="0"/>
            <elem xmlns:p="http://www.w3.org/ns/xproc" line="624" name="p:pipe" nsuri="http://www.w3.org/ns/xproc" flags="l" namespaces="p">
             <sequence>
              <att name="step" flags="l">
               <varRef name="pipe-step-name" slot="0"/>
              </att>
              <att name="port" flags="l">
               <str val="result"/>
              </att>
             </sequence>
            </elem>
           </choose>
          </sequence>
         </compElem>
        </let>
       </let>
      </let>
     </let>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="5" rank="1" minImp="0" slots="1" flags="s" line="631" module="xproceditor-noninteractive.xsl">
    <p.nodeTest role="match" test="element(Q{http://www.w3.org/2005/xpath-functions}xproc.Option)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='xproc.Option';"/>
    <sequence role="action" defaultElementNS="http://www.w3.org/1999/xhtml" ns="xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="632">
     <param name="Q{}global" slot="0" as="xs:boolean">
      <false role="select"/>
      <treat role="conversion" as="xs:boolean" jsTest="return SaxonJS.U.Atomic.boolean.matches(item);" diag="8|0|XTTE0590|global">
       <check card="1" diag="8|0|XTTE0590|global">
        <cvUntyped to="xs:boolean">
         <data>
          <supplied slot="0"/>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </param>
     <choose line="634">
      <vc op="ne" onEmpty="1" comp="CCC">
       <atomSing card="?" diag="1|0||eq">
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}optionValue)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='optionValue';"/>
       </atomSing>
       <str val="unset"/>
      </vc>
      <choose line="636">
       <varRef name="global" slot="0"/>
       <choose line="638">
        <fn name="matches">
         <check card="?" diag="0|0||fn:matches">
          <cvUntyped to="xs:string">
           <data>
            <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}optionValue)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='optionValue';"/>
           </data>
          </cvUntyped>
         </check>
         <str val="^\{([^}]+)\}$"/>
         <str val=""/>
        </fn>
        <elem xmlns:p="http://www.w3.org/ns/xproc" line="639" name="p:option" nsuri="http://www.w3.org/ns/xproc" namespaces="p">
         <sequence>
          <att name="name" flags="l">
           <fn name="string-join">
            <convert from="xs:untypedAtomic" to="xs:string">
             <data>
              <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}optionName)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='optionName';"/>
             </data>
            </convert>
            <str val=" "/>
           </fn>
          </att>
          <att line="640" name="select" flags="l">
           <fn name="replace">
            <check card="?" diag="0|0||fn:replace">
             <cvUntyped to="xs:string">
              <data>
               <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}optionValue)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='optionValue';"/>
              </data>
             </cvUntyped>
            </check>
            <str val="^\{([^}]+)\}$"/>
            <str val="$1"/>
            <str val=""/>
           </fn>
          </att>
         </sequence>
        </elem>
        <true/>
        <elem xmlns:p="http://www.w3.org/ns/xproc" line="644" name="p:option" nsuri="http://www.w3.org/ns/xproc" namespaces="p">
         <sequence>
          <att name="name" flags="l">
           <fn name="string-join">
            <convert from="xs:untypedAtomic" to="xs:string">
             <data>
              <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}optionName)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='optionName';"/>
             </data>
            </convert>
            <str val=" "/>
           </fn>
          </att>
          <att name="select" flags="l">
           <fn name="concat">
            <str val="'"/>
            <atomSing card="?" diag="0|1||fn:concat">
             <dot type="element(Q{http://www.w3.org/2005/xpath-functions}xproc.Option)"/>
            </atomSing>
            <str val="'"/>
           </fn>
          </att>
         </sequence>
        </elem>
       </choose>
       <fn line="650" name="matches">
        <check card="?" diag="0|0||fn:matches">
         <cvUntyped to="xs:string">
          <data>
           <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}optionValue)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='optionValue';"/>
          </data>
         </cvUntyped>
        </check>
        <str val="^\{([^}]+)\}$"/>
        <str val=""/>
       </fn>
       <elem xmlns:p="http://www.w3.org/ns/xproc" line="651" name="p:with-option" nsuri="http://www.w3.org/ns/xproc" namespaces="p">
        <sequence>
         <att name="name" flags="l">
          <fn name="string-join">
           <convert from="xs:untypedAtomic" to="xs:string">
            <data>
             <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}optionName)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='optionName';"/>
            </data>
           </convert>
           <str val=" "/>
          </fn>
         </att>
         <att line="652" name="select" flags="l">
          <fn name="replace">
           <check card="?" diag="0|0||fn:replace">
            <cvUntyped to="xs:string">
             <data>
              <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}optionValue)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='optionValue';"/>
             </data>
            </cvUntyped>
           </check>
           <str val="^\{([^}]+)\}$"/>
           <str val="$1"/>
           <str val=""/>
          </fn>
         </att>
        </sequence>
       </elem>
       <true/>
       <compAtt line="656">
        <fn role="name" name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}optionName)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='optionName';"/>
          </data>
         </convert>
         <str val=" "/>
        </fn>
        <fn role="select" name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}optionValue)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='optionValue';"/>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </compAtt>
      </choose>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="1" rank="2" minImp="0" slots="0" flags="s" line="213" module="xproceditor-noninteractive.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="element(Q{http://www.w3.org/2005/xpath-functions}xproc.Pipeline)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='xproc.Pipeline';"/>
     <gc defaultElementNS="http://www.w3.org/1999/xhtml" ns="xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="213" op="=" card="N:1" comp="CCC">
      <data>
       <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}stepScope)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='stepScope';"/>
      </data>
      <str val="0"/>
     </gc>
    </p.withPredicate>
    <callT role="action" defaultElementNS="http://www.w3.org/1999/xhtml" ns="xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="214" name="process-subpipeline" bSlot="6" flags="t"/>
   </templateRule>
   <templateRule prec="0" prio="-10.0" seq="6" rank="0" minImp="0" slots="0" flags="s" line="664" module="xproceditor-noninteractive.xsl">
    <p.nodeTest role="match" test="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
    <applyT role="action" defaultElementNS="http://www.w3.org/1999/xhtml" ns="xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="665" flags="ct" bSlot="-1">
     <axis role="select" name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
    </applyT>
   </templateRule>
  </mode>
 </co>
 <co id="12" binds="">
  <mode name="Q{}xprocify-post" onNo="TC" flags="W" patternSlots="0">
   <templateRule prec="0" prio="2.0" seq="6" rank="4" minImp="0" slots="1" flags="s" line="416" module="xproceditor-noninteractive.xsl">
    <p.withUpper role="match" axis="parent" upFirst="false">
     <p.withPredicate>
      <p.withPredicate>
       <p.nodeTest test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;"/>
       <gc defaultElementNS="http://www.w3.org/1999/xhtml" ns="xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="416" op="=" card="M:N" comp="CCC">
        <fn name="name">
         <dot type="element()"/>
        </fn>
        <literal count="2">
         <str val="p:input"/>
         <str val="p:with-input"/>
        </literal>
       </gc>
      </p.withPredicate>
      <slash defaultElementNS="http://www.w3.org/1999/xhtml" ns="xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="416">
       <axis name="child" nodeTest="element(Q{http://www.w3.org/ns/xproc}pipe)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/ns/xproc'&amp;&amp;q.local==='pipe';"/>
       <axis name="attribute" nodeTest="attribute(Q{}step)" jsTest="return item.name==='step'"/>
      </slash>
     </p.withPredicate>
     <p.withUpper axis="parent" upFirst="false">
      <p.nodeTest test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;"/>
      <p.nodeTest test="element(Q{http://www.w3.org/ns/xproc}for-each)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/ns/xproc'&amp;&amp;q.local==='for-each';"/>
     </p.withUpper>
    </p.withUpper>
    <sequence role="action" defaultElementNS="http://www.w3.org/1999/xhtml" ns="xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="417">
     <param name="Q{}step-name" slot="0" flags="ti" as="xs:string">
      <treat role="conversion" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="8|0|XTTE0590|step-name">
       <check card="1" diag="8|0|XTTE0590|step-name">
        <cvUntyped to="xs:string">
         <data>
          <supplied slot="0"/>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </param>
     <choose line="418">
      <fn name="not">
       <gc op="=" card="N:1" comp="CCC">
        <data>
         <slash>
          <axis name="child" nodeTest="element(Q{http://www.w3.org/ns/xproc}pipe)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/ns/xproc'&amp;&amp;q.local==='pipe';"/>
          <axis name="attribute" nodeTest="attribute(Q{}step)" jsTest="return item.name==='step'"/>
         </slash>
        </data>
        <varRef name="step-name" slot="0"/>
       </gc>
      </fn>
      <nextMatch line="419" flags="t"/>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="9" rank="2" minImp="0" slots="0" flags="s" line="435" module="xproceditor-noninteractive.xsl">
    <p.withPredicate role="match">
     <p.withUpper axis="parent" upFirst="false">
      <p.nodeTest test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;"/>
      <p.withPredicate>
       <p.withPredicate>
        <p.withPredicate>
         <p.nodeTest test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;"/>
         <fn defaultElementNS="http://www.w3.org/1999/xhtml" ns="xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="435" name="empty">
          <axis name="parent" nodeTest="(document-node()|element())" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===9||item.nodeType===11||item.nodeType===1);"/>
         </fn>
        </p.withPredicate>
        <fn defaultElementNS="http://www.w3.org/1999/xhtml" ns="xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="435" name="exists">
         <filter flags="b">
          <filter flags="b">
           <axis name="child" nodeTest="element(Q{http://www.w3.org/ns/xproc}output)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/ns/xproc'&amp;&amp;q.local==='output';"/>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}primary" chk="0"/>
            <str val="true"/>
           </gc>
          </filter>
          <fn name="exists">
           <tail start="2">
            <axis name="child" nodeTest="element(Q{http://www.w3.org/ns/xproc}pipe)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/ns/xproc'&amp;&amp;q.local==='pipe';"/>
           </tail>
          </fn>
         </filter>
        </fn>
       </p.withPredicate>
       <fn defaultElementNS="http://www.w3.org/1999/xhtml" ns="xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="435" name="empty">
        <slash>
         <filter flags="b">
          <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
          <fn name="empty">
           <axis name="following-sibling" nodeTest="element()" jsTest="return item.nodeType===1;"/>
          </fn>
         </filter>
         <axis name="self" nodeTest="element(Q{http://www.w3.org/ns/xproc}sink)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/ns/xproc'&amp;&amp;q.local==='sink';"/>
        </slash>
       </fn>
      </p.withPredicate>
     </p.withUpper>
     <fn defaultElementNS="http://www.w3.org/1999/xhtml" ns="xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="435" name="empty">
      <axis name="following-sibling" nodeTest="element()" jsTest="return item.nodeType===1;"/>
     </fn>
    </p.withPredicate>
    <sequence role="action" defaultElementNS="http://www.w3.org/1999/xhtml" ns="xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="436">
     <nextMatch flags="i"/>
     <elem xmlns:p="http://www.w3.org/ns/xproc" name="p:sink" nsuri="http://www.w3.org/ns/xproc" namespaces="p">
      <empty/>
     </elem>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="7" rank="2" minImp="0" slots="1" flags="s" line="423" module="xproceditor-noninteractive.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;"/>
     <fn defaultElementNS="http://www.w3.org/1999/xhtml" ns="xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="423" name="empty">
      <axis name="parent" nodeTest="(document-node()|element())" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===9||item.nodeType===11||item.nodeType===1);"/>
     </fn>
    </p.withPredicate>
    <sequence role="action" defaultElementNS="http://www.w3.org/1999/xhtml" ns="xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="424">
     <param name="Q{}pipeinfo" slot="0" flags="t" as="element()*">
      <empty role="select"/>
      <treat role="conversion" as="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;" diag="8|0|XTTE0590|pipeinfo">
       <supplied slot="0"/>
      </treat>
     </param>
     <copy line="426" flags="cin">
      <sequence role="content">
       <applyT flags="c" bSlot="-1">
        <sequence role="select">
         <axis name="attribute" nodeTest="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
         <axis name="child" nodeTest="( element() | text() | comment() | processing-instruction() )" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===1 || item.nodeType===3 || item.nodeType===7 || item.nodeType===8);"/>
        </sequence>
       </applyT>
       <varRef line="427" name="pipeinfo" slot="0"/>
      </sequence>
     </copy>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="-0.5" seq="0" rank="1" minImp="0" slots="0" flags="s" line="99" module="xproceditor-noninteractive.xsl">
    <p.nodeTest role="match" test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;"/>
    <copy role="action" defaultElementNS="http://www.w3.org/1999/xhtml" ns="=http://www.w3.org/2005/xpath-functions xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="101" flags="cin">
     <applyT role="content" flags="c" bSlot="-1">
      <sequence role="select">
       <axis name="attribute" nodeTest="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
       <axis name="child" nodeTest="( element() | text() | comment() | processing-instruction() )" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===1 || item.nodeType===3 || item.nodeType===7 || item.nodeType===8);"/>
      </sequence>
     </applyT>
    </copy>
   </templateRule>
   <templateRule prec="0" prio="-1.0" seq="4" rank="0" minImp="0" slots="0" flags="s" line="410" module="xproceditor-noninteractive.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="element(Q{http://www.w3.org/ns/xproc}for-each)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/ns/xproc'&amp;&amp;q.local==='for-each';"/>
     <fn defaultElementNS="http://www.w3.org/1999/xhtml" ns="xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="410" name="empty">
      <axis name="attribute" nodeTest="attribute(Q{}name)" jsTest="return item.name==='name'"/>
     </fn>
    </p.withPredicate>
    <applyT role="action" defaultElementNS="http://www.w3.org/1999/xhtml" ns="xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="411" flags="cti" bSlot="-1">
     <axis role="select" name="child" nodeTest="node()" jsTest="return true;"/>
    </applyT>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="8" rank="2" minImp="0" slots="0" flags="s" line="432" module="xproceditor-noninteractive.xsl">
    <p.withUpper role="match" axis="parent" upFirst="false">
     <p.nodeTest test="element(Q{http://www.w3.org/ns/xproc}pipe)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/ns/xproc'&amp;&amp;q.local==='pipe';"/>
     <p.withUpper axis="parent" upFirst="false">
      <p.withPredicate>
       <p.withPredicate>
        <p.nodeTest test="element(Q{http://www.w3.org/ns/xproc}output)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/ns/xproc'&amp;&amp;q.local==='output';"/>
        <gc defaultElementNS="http://www.w3.org/1999/xhtml" ns="xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="432" op="=" card="M:N" comp="CCC">
         <data>
          <axis name="attribute" nodeTest="attribute(Q{}primary)" jsTest="return item.name==='primary'"/>
         </data>
         <str val="true"/>
        </gc>
       </p.withPredicate>
       <vc defaultElementNS="http://www.w3.org/1999/xhtml" ns="xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="432" op="eq" comp="CAVC">
        <fn name="count">
         <axis name="child" nodeTest="element(Q{http://www.w3.org/ns/xproc}pipe)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/ns/xproc'&amp;&amp;q.local==='pipe';"/>
        </fn>
        <int val="1"/>
       </vc>
      </p.withPredicate>
      <p.withPredicate>
       <p.withPredicate>
        <p.nodeTest test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;"/>
        <fn defaultElementNS="http://www.w3.org/1999/xhtml" ns="xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="432" name="empty">
         <axis name="parent" nodeTest="(document-node()|element())" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===9||item.nodeType===11||item.nodeType===1);"/>
        </fn>
       </p.withPredicate>
       <fn defaultElementNS="http://www.w3.org/1999/xhtml" ns="xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="432" name="empty">
        <slash>
         <filter flags="pb">
          <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
          <isLast test="1"/>
         </filter>
         <axis name="self" nodeTest="element(Q{http://www.w3.org/ns/xproc}sink)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/ns/xproc'&amp;&amp;q.local==='sink';"/>
        </slash>
       </fn>
      </p.withPredicate>
     </p.withUpper>
    </p.withUpper>
    <empty role="action"/>
   </templateRule>
   <templateRule prec="0" prio="-1.0" seq="4" rank="0" minImp="0" slots="0" flags="s" line="410" module="xproceditor-noninteractive.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="element(Q{http://www.w3.org/ns/xproc}viewport)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/ns/xproc'&amp;&amp;q.local==='viewport';"/>
     <fn defaultElementNS="http://www.w3.org/1999/xhtml" ns="xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="410" name="empty">
      <axis name="attribute" nodeTest="attribute(Q{}name)" jsTest="return item.name==='name'"/>
     </fn>
    </p.withPredicate>
    <applyT role="action" defaultElementNS="http://www.w3.org/1999/xhtml" ns="xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="411" flags="cti" bSlot="-1">
     <axis role="select" name="child" nodeTest="node()" jsTest="return true;"/>
    </applyT>
   </templateRule>
   <templateRule prec="0" prio="1.0" seq="2" rank="3" minImp="0" slots="0" flags="s" line="402" module="xproceditor-noninteractive.xsl">
    <p.withUpper role="match" axis="parent" upFirst="false">
     <p.withPredicate>
      <p.withPredicate>
       <p.nodeTest test="element(Q{http://www.w3.org/ns/xproc}input)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/ns/xproc'&amp;&amp;q.local==='input';"/>
       <gc defaultElementNS="http://www.w3.org/1999/xhtml" ns="xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="402" op="=" card="M:N" comp="CCC">
        <data>
         <axis name="attribute" nodeTest="attribute(Q{}port)" jsTest="return item.name==='port'"/>
        </data>
        <str val="[source]"/>
       </gc>
      </p.withPredicate>
      <fn defaultElementNS="http://www.w3.org/1999/xhtml" ns="xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="402" name="empty">
       <axis name="child" nodeTest="element(Q{http://www.w3.org/ns/xproc}pipe)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/ns/xproc'&amp;&amp;q.local==='pipe';"/>
      </fn>
     </p.withPredicate>
     <p.nodeTest test="element(Q{http://www.w3.org/ns/xproc}viewport)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/ns/xproc'&amp;&amp;q.local==='viewport';"/>
    </p.withUpper>
    <empty role="action"/>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="5" rank="2" minImp="0" slots="0" flags="s" line="414" module="xproceditor-noninteractive.xsl">
    <p.withUpper role="match" axis="parent" upFirst="false">
     <p.nodeTest test="element(Q{http://www.w3.org/ns/xproc}input)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/ns/xproc'&amp;&amp;q.local==='input';"/>
     <p.nodeTest test="element(Q{http://www.w3.org/ns/xproc}for-each)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/ns/xproc'&amp;&amp;q.local==='for-each';"/>
    </p.withUpper>
    <empty role="action"/>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="3" rank="2" minImp="0" slots="0" flags="s" line="404" module="xproceditor-noninteractive.xsl">
    <p.withUpper role="match" axis="parent" upFirst="false">
     <p.withPredicate>
      <p.nodeTest test="element(Q{http://www.w3.org/ns/xproc}input)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/ns/xproc'&amp;&amp;q.local==='input';"/>
      <gc defaultElementNS="http://www.w3.org/1999/xhtml" ns="xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="404" op="=" card="M:N" comp="CCC">
       <data>
        <axis name="attribute" nodeTest="attribute(Q{}port)" jsTest="return item.name==='port'"/>
       </data>
       <str val="[source]"/>
      </gc>
     </p.withPredicate>
     <p.nodeTest test="element(Q{http://www.w3.org/ns/xproc}viewport)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/ns/xproc'&amp;&amp;q.local==='viewport';"/>
    </p.withUpper>
    <compElem role="action" defaultElementNS="http://www.w3.org/1999/xhtml" ns="xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="405">
     <str role="name" val="p:viewport-source"/>
     <applyT role="content" line="406" flags="ci" bSlot="-1">
      <axis role="select" name="child" nodeTest="node()" jsTest="return true;"/>
     </applyT>
    </compElem>
   </templateRule>
   <templateRule prec="0" prio="-0.5" seq="0" rank="1" minImp="0" slots="0" flags="s" line="99" module="xproceditor-noninteractive.xsl">
    <p.nodeTest role="match" test="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
    <copy role="action" defaultElementNS="http://www.w3.org/1999/xhtml" ns="=http://www.w3.org/2005/xpath-functions xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="101" flags="cin">
     <applyT role="content" flags="c" bSlot="-1">
      <sequence role="select">
       <axis name="attribute" nodeTest="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
       <axis name="child" nodeTest="( element() | text() | comment() | processing-instruction() )" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===1 || item.nodeType===3 || item.nodeType===7 || item.nodeType===8);"/>
      </sequence>
     </applyT>
    </copy>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="1" rank="2" minImp="0" slots="0" flags="s" line="400" module="xproceditor-noninteractive.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="attribute(Q{}sequence)" jsTest="return SaxonJS.U.isAttr(item) &amp;&amp; item.name==='sequence'"/>
     <vc defaultElementNS="http://www.w3.org/1999/xhtml" ns="xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="400" op="eq" comp="CCC">
      <cast as="xs:string" emptiable="0">
       <data>
        <dot type="attribute(Q{}sequence)"/>
       </data>
      </cast>
      <str val="unset"/>
     </vc>
    </p.withPredicate>
    <empty role="action"/>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="1" rank="2" minImp="0" slots="0" flags="s" line="400" module="xproceditor-noninteractive.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="attribute(Q{}primary)" jsTest="return SaxonJS.U.isAttr(item) &amp;&amp; item.name==='primary'"/>
     <vc defaultElementNS="http://www.w3.org/1999/xhtml" ns="xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="400" op="eq" comp="CCC">
      <cast as="xs:string" emptiable="0">
       <data>
        <dot type="attribute(Q{}primary)"/>
       </data>
      </cast>
      <str val="unset"/>
     </vc>
    </p.withPredicate>
    <empty role="action"/>
   </templateRule>
  </mode>
 </co>
 <co id="11" binds="13 13">
  <function name="Q{bogo:my}is-primary-connection" line="578" module="xproceditor-noninteractive.xsl" eval="7" flags="pU" as="xs:boolean" slots="1">
   <arg name="connection" as="element(Q{http://www.w3.org/2005/xpath-functions}devs.StandLink)"/>
   <and role="body" defaultElementNS="http://www.w3.org/1999/xhtml" ns="xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="582" op="and">
    <gc op="=" card="N:1" comp="CCC">
     <data>
      <slash simple="1">
       <ufCall name="Q{bogo:my}portData-for-linkEnd" tailCall="false" bSlot="0" eval="4">
        <check card="1" diag="0|0||my:portData-for-linkEnd">
         <slash simple="1">
          <varRef name="connection" slot="0"/>
          <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}target)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='target';"/>
         </slash>
        </check>
       </ufCall>
       <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}portPrimary)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='portPrimary';"/>
      </slash>
     </data>
     <str val="true"/>
    </gc>
    <gc op="=" card="N:1" comp="CCC">
     <data>
      <slash simple="1">
       <ufCall name="Q{bogo:my}portData-for-linkEnd" tailCall="false" bSlot="1" eval="4">
        <check card="1" diag="0|0||my:portData-for-linkEnd">
         <slash simple="1">
          <varRef name="connection" slot="0"/>
          <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}source)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='source';"/>
         </slash>
        </check>
       </ufCall>
       <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}portPrimary)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='portPrimary';"/>
      </slash>
     </data>
     <str val="true"/>
    </gc>
   </and>
  </function>
 </co>
 <co id="14" binds="14">
  <function name="Q{bogo:my}distance-to-end" line="484" module="xproceditor-noninteractive.xsl" eval="7" flags="pU" as="xs:integer" slots="9">
   <arg name="plan-item" as="element(Q{http://www.w3.org/2005/xpath-functions}plan-item)"/>
   <arg name="current" as="xs:integer"/>
   <arg name="seen" as="element(Q{http://www.w3.org/2005/xpath-functions}plan-item)*"/>
   <arg name="iteration" as="xs:integer"/>
   <let role="body" defaultElementNS="http://www.w3.org/1999/xhtml" ns="xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="490" var="connected-to" as="element(Q{http://www.w3.org/2005/xpath-functions}plan-item)*" slot="4" eval="3">
    <treat as="element(Q{http://www.w3.org/2005/xpath-functions}plan-item)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='plan-item';" diag="3|0|XTTE0570|connected-to">
     <fn name="key">
      <str val="plan-by-id"/>
      <data>
       <slash>
        <slash simple="1">
         <varRef name="plan-item" slot="0"/>
         <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}connection)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='connection';"/>
        </slash>
        <axis name="attribute" nodeTest="attribute(Q{}target)" jsTest="return item.name==='target'"/>
       </slash>
      </data>
      <fn name="root">
       <varRef name="plan-item" slot="0"/>
      </fn>
     </fn>
    </treat>
    <choose line="492">
     <some var="pi" slot="5">
      <varRef name="seen" slot="2"/>
      <is op="is">
       <varRef name="pi" slot="5"/>
       <varRef name="plan-item" slot="0"/>
      </is>
     </some>
     <varRef line="493" name="current" slot="1"/>
     <compareToInt line="495" op="gt" val="20">
      <varRef name="iteration" slot="3"/>
     </compareToInt>
     <varRef line="496" name="current" slot="1"/>
     <fn line="498" name="exists">
      <varRef name="connected-to" slot="4"/>
     </fn>
     <let line="501" var="vv:v2" as="xs:integer" slot="6" eval="13">
      <arith op="+" calc="i+i">
       <varRef name="iteration" slot="3"/>
       <int val="1"/>
      </arith>
      <let var="vv:v1" as="element(Q{http://www.w3.org/2005/xpath-functions}plan-item)+" slot="7" eval="4">
       <sequence>
        <varRef name="seen" slot="2"/>
        <varRef name="plan-item" slot="0"/>
       </sequence>
       <let var="vv:v0" as="xs:integer" slot="8" eval="13">
        <arith op="+" calc="i+i">
         <varRef name="current" slot="1"/>
         <int val="1"/>
        </arith>
        <fn line="504" name="max">
         <check line="500" card="+" diag="3|0|XTTE0570|vals">
          <forEach>
           <varRef name="connected-to" slot="4"/>
           <ufCall line="501" name="Q{bogo:my}distance-to-end" tailCall="false" bSlot="0" eval="7 6 4 6">
            <dot type="element(Q{http://www.w3.org/2005/xpath-functions}plan-item)"/>
            <varRef name="vv:v0" slot="8"/>
            <varRef name="vv:v1" slot="7"/>
            <varRef name="vv:v2" slot="6"/>
           </ufCall>
          </forEach>
         </check>
        </fn>
       </let>
      </let>
     </let>
     <true/>
     <varRef line="507" name="current" slot="1"/>
    </choose>
   </let>
  </function>
 </co>
 <co id="10" binds="15">
  <mode name="Q{}plan-add-position" onNo="TC" flags="W" patternSlots="0">
   <templateRule prec="0" prio="-0.5" seq="0" rank="0" minImp="0" slots="0" flags="s" line="99" module="xproceditor-noninteractive.xsl">
    <p.nodeTest role="match" test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;"/>
    <copy role="action" defaultElementNS="http://www.w3.org/1999/xhtml" ns="=http://www.w3.org/2005/xpath-functions xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="101" flags="cin">
     <applyT role="content" flags="c" bSlot="-1">
      <sequence role="select">
       <axis name="attribute" nodeTest="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
       <axis name="child" nodeTest="( element() | text() | comment() | processing-instruction() )" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===1 || item.nodeType===3 || item.nodeType===7 || item.nodeType===8);"/>
      </sequence>
     </applyT>
    </copy>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="1" rank="1" minImp="0" slots="1" flags="s" line="464" module="xproceditor-noninteractive.xsl">
    <p.nodeTest role="match" test="element(Q{http://www.w3.org/2005/xpath-functions}plan-item)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='plan-item';"/>
    <sequence role="action" defaultElementNS="http://www.w3.org/1999/xhtml" ns="xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="465">
     <param name="Q{}max-distance" slot="0" flags="ti" as="xs:integer">
      <treat role="conversion" as="xs:integer" jsTest="return SaxonJS.U.Atomic.integer.matches(item);" diag="8|0|XTTE0590|max-distance">
       <check card="1" diag="8|0|XTTE0590|max-distance">
        <cvUntyped to="xs:integer">
         <data>
          <supplied slot="0"/>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </param>
     <copy line="467" flags="cin">
      <sequence role="content">
       <applyT flags="c" bSlot="-1">
        <axis role="select" name="attribute" nodeTest="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
       </applyT>
       <att line="468" name="pos" flags="l">
        <convert from="xs:integer" to="xs:string">
         <arith op="-" calc="i-i">
          <varRef name="max-distance" slot="0"/>
          <cast as="xs:integer" emptiable="1">
           <attVal name="Q{}ppos" chk="0"/>
          </cast>
         </arith>
        </convert>
       </att>
       <choose line="469">
        <fn name="exists">
         <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}connection)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='connection';"/>
        </fn>
        <ufCall line="470" name="Q{bogo:my}plan-distance" tailCall="false" bSlot="0" eval="7 0 6">
         <dot type="element(Q{http://www.w3.org/2005/xpath-functions}plan-item)"/>
         <int val="1"/>
         <varRef name="max-distance" slot="0"/>
        </ufCall>
       </choose>
       <applyT line="472" flags="ci" bSlot="-1">
        <axis role="select" name="child" nodeTest="node()" jsTest="return true;"/>
       </applyT>
      </sequence>
     </copy>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="-0.5" seq="0" rank="0" minImp="0" slots="0" flags="s" line="99" module="xproceditor-noninteractive.xsl">
    <p.nodeTest role="match" test="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
    <copy role="action" defaultElementNS="http://www.w3.org/1999/xhtml" ns="=http://www.w3.org/2005/xpath-functions xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="101" flags="cin">
     <applyT role="content" flags="c" bSlot="-1">
      <sequence role="select">
       <axis name="attribute" nodeTest="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
       <axis name="child" nodeTest="( element() | text() | comment() | processing-instruction() )" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===1 || item.nodeType===3 || item.nodeType===7 || item.nodeType===8);"/>
      </sequence>
     </applyT>
    </copy>
   </templateRule>
  </mode>
 </co>
 <co id="8" binds="14">
  <mode name="Q{}plan-add-prelim-position" onNo="TC" flags="W" patternSlots="0">
   <templateRule prec="0" prio="-0.5" seq="0" rank="0" minImp="0" slots="0" flags="s" line="99" module="xproceditor-noninteractive.xsl">
    <p.nodeTest role="match" test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;"/>
    <copy role="action" defaultElementNS="http://www.w3.org/1999/xhtml" ns="=http://www.w3.org/2005/xpath-functions xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="101" flags="cin">
     <applyT role="content" flags="c" bSlot="-1">
      <sequence role="select">
       <axis name="attribute" nodeTest="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
       <axis name="child" nodeTest="( element() | text() | comment() | processing-instruction() )" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===1 || item.nodeType===3 || item.nodeType===7 || item.nodeType===8);"/>
      </sequence>
     </applyT>
    </copy>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="1" rank="1" minImp="0" slots="0" flags="s" line="476" module="xproceditor-noninteractive.xsl">
    <p.nodeTest role="match" test="element(Q{http://www.w3.org/2005/xpath-functions}plan-item)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='plan-item';"/>
    <copy role="action" defaultElementNS="http://www.w3.org/1999/xhtml" ns="xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="478" flags="cin">
     <sequence role="content">
      <att name="ppos" flags="l">
       <convert from="xs:integer" to="xs:string">
        <ufCall name="Q{bogo:my}distance-to-end" tailCall="false" bSlot="0" eval="7 0 0 0">
         <dot type="element(Q{http://www.w3.org/2005/xpath-functions}plan-item)"/>
         <int val="0"/>
         <empty/>
         <int val="0"/>
        </ufCall>
       </convert>
      </att>
      <applyT line="479" flags="c" bSlot="-1">
       <axis role="select" name="attribute" nodeTest="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
      </applyT>
      <applyT line="480" flags="ci" bSlot="-1">
       <axis role="select" name="child" nodeTest="node()" jsTest="return true;"/>
      </applyT>
     </sequence>
    </copy>
   </templateRule>
   <templateRule prec="0" prio="-0.5" seq="0" rank="0" minImp="0" slots="0" flags="s" line="99" module="xproceditor-noninteractive.xsl">
    <p.nodeTest role="match" test="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
    <copy role="action" defaultElementNS="http://www.w3.org/1999/xhtml" ns="=http://www.w3.org/2005/xpath-functions xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="101" flags="cin">
     <applyT role="content" flags="c" bSlot="-1">
      <sequence role="select">
       <axis name="attribute" nodeTest="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
       <axis name="child" nodeTest="( element() | text() | comment() | processing-instruction() )" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===1 || item.nodeType===3 || item.nodeType===7 || item.nodeType===8);"/>
      </sequence>
     </applyT>
    </copy>
   </templateRule>
  </mode>
 </co>
 <co id="16" binds="0">
  <globalVariable name="Q{http://saxon.sf.net/generated-variable}gg1489557177" type="xs:string?" line="25" module="xproceditor-noninteractive.xsl" visibility="PRIVATE" jsAcceptor="return SaxonJS.U.Atomic.string.cast(val);" jsCardCheck="function c(n) {return n&lt;=1;};">
   <treat defaultElementNS="http://www.w3.org/1999/xhtml" ns="xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="25" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="0|0||fn:unparsed-text">
    <check card="?" diag="0|0||fn:unparsed-text">
     <cvUntyped to="xs:string">
      <data>
       <gVarRef name="Q{}json" bSlot="0"/>
      </data>
     </cvUntyped>
    </check>
   </treat>
  </globalVariable>
 </co>
 <co id="9" binds="11 9">
  <function name="Q{bogo:my}plan" line="540" module="xproceditor-noninteractive.xsl" eval="3" flags="pU" as="element(Q{http://www.w3.org/2005/xpath-functions}plan-item)*" slots="2">
   <arg name="immediates" as="element()*"/>
   <arg name="container-id" as="xs:string"/>
   <sequence role="body" defaultElementNS="http://www.w3.org/1999/xhtml" ns="xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="544">
    <forEach>
     <varRef name="immediates" slot="0"/>
     <elem ns="=http://www.w3.org/2005/xpath-functions xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="545" name="plan-item" nsuri="http://www.w3.org/2005/xpath-functions" flags="d" namespaces="p">
      <sequence>
       <att name="id" flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}stepId)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='stepId';"/>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </att>
       <choose line="546">
        <gc op="=" card="N:1" comp="CCC">
         <data>
          <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}stepId)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='stepId';"/>
         </data>
         <varRef name="container-id" slot="1"/>
        </gc>
        <att line="547" name="container" flags="l">
         <str val="true"/>
        </att>
       </choose>
       <forEach line="549">
        <filter flags="b">
         <fn name="key">
          <str val="connect"/>
          <data>
           <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}stepId)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='stepId';"/>
          </data>
         </fn>
         <gc op="=" card="1:1" comp="CCC">
          <data>
           <first>
            <sequence>
             <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}parent)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='parent';"/>
             <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}stepId)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='stepId';"/>
            </sequence>
           </first>
          </data>
          <varRef name="container-id" slot="1"/>
         </gc>
        </filter>
        <elem line="550" name="connection" nsuri="http://www.w3.org/2005/xpath-functions" flags="dl" namespaces="p">
         <sequence>
          <att name="target" flags="l">
           <fn name="string-join">
            <convert from="xs:untypedAtomic" to="xs:string">
             <data>
              <slash>
               <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}target)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='target';"/>
               <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}id)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='id';"/>
              </slash>
             </data>
            </convert>
            <str val=" "/>
           </fn>
          </att>
          <choose line="551">
           <ufCall name="Q{bogo:my}is-primary-connection" tailCall="false" bSlot="0" eval="7">
            <treat as="element(Q{http://www.w3.org/2005/xpath-functions}devs.StandLink)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='devs.StandLink';" diag="0|0||my:is-primary-connection">
             <dot type="node()"/>
            </treat>
           </ufCall>
           <att line="552" name="primary" flags="l">
            <str val="true"/>
           </att>
          </choose>
          <choose line="554">
           <gc op="=" card="N:1" comp="CCC">
            <data>
             <slash>
              <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}target)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='target';"/>
              <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}id)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='id';"/>
             </slash>
            </data>
            <varRef name="container-id" slot="1"/>
           </gc>
           <att line="555" name="container" flags="l">
            <str val="true"/>
           </att>
          </choose>
         </sequence>
        </elem>
       </forEach>
      </sequence>
     </elem>
    </forEach>
    <choose line="561">
     <fn name="exists">
      <varRef name="immediates" slot="0"/>
     </fn>
     <ufCall line="566" name="Q{bogo:my}plan" tailCall="false" bSlot="1" eval="4 6">
      <treat as="element()" jsTest="return item.nodeType===1;" diag="0|0||my:plan">
       <fn name="key">
        <str val="step-by-id"/>
        <data>
         <docOrder intra="1">
          <slash>
           <docOrder intra="1">
            <slash>
             <treat line="565" as="element()" jsTest="return item.nodeType===1;" diag="3|0|XTTE0570|next">
              <filter flags="b">
               <filter flags="b">
                <fn name="key">
                 <str val="connect"/>
                 <data>
                  <docOrder intra="0">
                   <slash>
                    <filter flags="b">
                     <varRef name="immediates" slot="0"/>
                     <fn name="not">
                      <gc op="=" card="N:1" comp="CCC">
                       <data>
                        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}stepId)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='stepId';"/>
                       </data>
                       <varRef name="container-id" slot="1"/>
                      </gc>
                     </fn>
                    </filter>
                    <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}stepId)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='stepId';"/>
                   </slash>
                  </docOrder>
                 </data>
                 <check card="1" diag="0|2||fn:key">
                  <fn name="root">
                   <first>
                    <varRef name="immediates" slot="0"/>
                   </first>
                  </fn>
                 </check>
                </fn>
                <gc op="=" card="N:1" comp="CCC">
                 <data>
                  <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}parent)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='parent';"/>
                 </data>
                 <varRef name="container-id" slot="1"/>
                </gc>
               </filter>
               <fn name="not">
                <gc op="=" card="N:1" comp="CCC">
                 <data>
                  <slash>
                   <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}target)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='target';"/>
                   <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}id)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='id';"/>
                  </slash>
                 </data>
                 <varRef name="container-id" slot="1"/>
                </gc>
               </fn>
              </filter>
             </treat>
             <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}target)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='target';"/>
            </slash>
           </docOrder>
           <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}id)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='id';"/>
          </slash>
         </docOrder>
        </data>
        <check card="1" diag="0|2||fn:key">
         <fn name="root">
          <first>
           <varRef name="immediates" slot="0"/>
          </first>
         </fn>
        </check>
       </fn>
      </treat>
      <varRef name="container-id" slot="1"/>
     </ufCall>
    </choose>
   </sequence>
  </function>
 </co>
 <co id="6" binds="6">
  <mode name="Q{}clean" onNo="TC" flags="W" patternSlots="0">
   <templateRule prec="0" prio="0.5" seq="3" rank="1" minImp="0" slots="0" flags="s" line="674" module="xproceditor-noninteractive.xsl">
    <p.withUpper role="match" axis="parent" upFirst="false">
     <p.nodeTest test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;"/>
     <p.nodeTest test="document-node()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===9||item.nodeType===11);"/>
    </p.withUpper>
    <copy role="action" defaultElementNS="http://www.w3.org/1999/xhtml" ns="xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="676" flags="in">
     <sequence role="content">
      <namespace flags="l">
       <str role="name" val="p"/>
       <str role="select" val="http://www.w3.org/ns/xproc"/>
      </namespace>
      <namespace line="677" flags="l">
       <str role="name" val="c"/>
       <str role="select" val="http://www.w3.org/ns/xproc-step"/>
      </namespace>
      <applyT line="678" mode="Q{}clean" bSlot="0">
       <sequence role="select">
        <axis name="attribute" nodeTest="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
        <axis name="child" nodeTest="( element() | text() | comment() | processing-instruction() )" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===1 || item.nodeType===3 || item.nodeType===7 || item.nodeType===8);"/>
       </sequence>
      </applyT>
     </sequence>
    </copy>
   </templateRule>
   <templateRule prec="0" prio="-0.5" seq="2" rank="0" minImp="0" slots="0" flags="s" line="668" module="xproceditor-noninteractive.xsl">
    <p.nodeTest role="match" test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;"/>
    <copy role="action" defaultElementNS="http://www.w3.org/1999/xhtml" ns="xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="670" flags="in">
     <applyT role="content" flags="c" bSlot="-1">
      <sequence role="select">
       <axis name="attribute" nodeTest="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
       <axis name="child" nodeTest="( element() | text() | comment() | processing-instruction() )" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===1 || item.nodeType===3 || item.nodeType===7 || item.nodeType===8);"/>
      </sequence>
     </applyT>
    </copy>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="0" rank="1" minImp="0" slots="0" flags="s" line="441" module="xproceditor-noninteractive.xsl">
    <p.withUpper role="match" axis="parent" upFirst="false">
     <p.nodeTest test="element(Q{http://www.w3.org/ns/xproc}input)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/ns/xproc'&amp;&amp;q.local==='input';"/>
     <p.nodeTest test="element(Q{http://www.w3.org/ns/xproc}for-each)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/ns/xproc'&amp;&amp;q.local==='for-each';"/>
    </p.withUpper>
    <elem xmlns:p="http://www.w3.org/ns/xproc" role="action" defaultElementNS="http://www.w3.org/1999/xhtml" ns="xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="443" name="p:iteration-source" nsuri="http://www.w3.org/ns/xproc" namespaces="p">
     <applyT flags="ci" bSlot="-1">
      <axis role="select" name="child" nodeTest="node()" jsTest="return true;"/>
     </applyT>
    </elem>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="1" rank="1" minImp="0" slots="0" flags="s" line="447" module="xproceditor-noninteractive.xsl">
    <p.withUpper role="match" axis="parent" upFirst="false">
     <p.withPredicate>
      <p.nodeTest test="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
      <vc defaultElementNS="http://www.w3.org/1999/xhtml" ns="xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="447" op="eq" comp="CCC">
       <cast as="xs:string" emptiable="0">
        <data>
         <dot type="attribute()"/>
        </data>
       </cast>
       <str val="unset"/>
      </vc>
     </p.withPredicate>
     <p.nodeTest test="Q{http://www.w3.org/ns/xproc}*" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1&amp;&amp;q.uri==='http://www.w3.org/ns/xproc'"/>
    </p.withUpper>
    <empty role="action"/>
   </templateRule>
   <templateRule prec="0" prio="-0.5" seq="2" rank="0" minImp="0" slots="0" flags="s" line="668" module="xproceditor-noninteractive.xsl">
    <p.nodeTest role="match" test="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
    <copy role="action" defaultElementNS="http://www.w3.org/1999/xhtml" ns="xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="670" flags="in">
     <applyT role="content" flags="c" bSlot="-1">
      <sequence role="select">
       <axis name="attribute" nodeTest="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
       <axis name="child" nodeTest="( element() | text() | comment() | processing-instruction() )" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===1 || item.nodeType===3 || item.nodeType===7 || item.nodeType===8);"/>
      </sequence>
     </applyT>
    </copy>
   </templateRule>
  </mode>
 </co>
 <co id="17" vis="PUBLIC" binds="">
  <globalParam name="Q{}layout" type="xs:string?" line="15" module="xproceditor-noninteractive.xsl" visibility="PUBLIC" jsAcceptor="return SaxonJS.U.Atomic.string.cast(val);" jsCardCheck="function c(n) {return n&lt;=1;};">
   <str val="false"/>
  </globalParam>
 </co>
 <co id="18" binds="">
  <function name="Q{bogo:my}normalize-map-key" line="156" module="xproceditor-noninteractive.xsl" eval="7" flags="pU" as="xs:string" slots="1">
   <arg name="input" as="xs:string"/>
   <choose role="body" defaultElementNS="http://www.w3.org/1999/xhtml" ns="xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="159">
    <castable as="xs:NCName" emptiable="0">
     <varRef name="input" slot="0"/>
    </castable>
    <varRef line="160" name="input" slot="0"/>
    <true/>
    <fn line="167" name="string-join">
     <sequence>
      <fn name="replace">
       <fn name="substring">
        <varRef name="input" slot="0"/>
        <int val="1"/>
        <int val="1"/>
       </fn>
       <str val="\I"/>
       <str val="_"/>
       <str val=""/>
      </fn>
      <fn name="replace">
       <fn name="substring">
        <varRef name="input" slot="0"/>
        <int val="2"/>
       </fn>
       <str val="\C"/>
       <str val="_"/>
       <str val=""/>
      </fn>
     </sequence>
     <str val=""/>
    </fn>
   </choose>
  </function>
 </co>
 <co id="19" binds="20 2">
  <mode name="Q{http://saxonica.com/ns/interactiveXSLT}click" onNo="TC" flags="W" patternSlots="0">
   <templateRule prec="1" prio="0.5" seq="0" rank="0" minImp="0" slots="2" flags="s" line="25" module="xproceditor.xsl">
    <p.nodeSet role="match" type="element()">
     <fn defaultElementNS="http://www.w3.org/1999/xhtml" ns="xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc fn=~ ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="25" name="id">
      <str val="downloadlink"/>
     </fn>
    </p.nodeSet>
    <let role="action" defaultElementNS="http://www.w3.org/1999/xhtml" ns="xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc fn=~ ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="26" var="pipeline" as="document-node(element())" slot="0" eval="7">
     <treat line="27" as="document-node(element())" jsTest="function e(item) {return item.nodeType===1;};return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===9 || item.nodeType===11) &amp;&amp; SaxonJS.U.Axis.child(item).filter(e).next();" diag="3|0|XTTE0570|pipeline">
      <check card="1" diag="3|0|XTTE0570|pipeline">
       <callT name="create-xpl" bSlot="0"/>
      </check>
     </treat>
     <let line="35" var="url" as="xs:string" slot="1" eval="7">
      <treat as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="3|0|XTTE0570|url">
       <check card="1" diag="3|0|XTTE0570|url">
        <cvUntyped to="xs:string">
         <data>
          <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
           <check card="1" diag="0|0||ixsl:call">
            <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
           </check>
           <str val="downloadXml"/>
           <arrayBlock>
            <fn name="serialize">
             <varRef name="pipeline" slot="0"/>
             <gVarRef name="Q{}serialization-params" bSlot="1"/>
            </fn>
            <str val="downloadlink"/>
           </arrayBlock>
          </ifCall>
         </data>
        </cvUntyped>
       </check>
      </treat>
      <message line="37">
       <sequence role="select">
        <str val="Download URL: "/>
        <varRef name="url" slot="1"/>
       </sequence>
       <str role="terminate" val="no"/>
       <str role="error" val="Q{http://www.w3.org/2005/xqt-errors}XTMM9000"/>
      </message>
     </let>
    </let>
   </templateRule>
  </mode>
 </co>
 <co id="21" vis="PUBLIC" binds="">
  <globalParam name="Q{}optimize" type="xs:string?" line="16" module="xproceditor-noninteractive.xsl" visibility="PUBLIC" jsAcceptor="return SaxonJS.U.Atomic.string.cast(val);" jsCardCheck="function c(n) {return n&lt;=1;};">
   <str val="true"/>
  </globalParam>
 </co>
 <co id="4" binds="18 18">
  <mode name="Q{}simplify-json-representation" onNo="TC" flags="W" patternSlots="0">
   <templateRule prec="0" prio="1.0" seq="4" rank="2" minImp="0" slots="1" flags="s" line="134" module="xproceditor-noninteractive.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="Q{http://www.w3.org/2005/xpath-functions}*" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1&amp;&amp;q.uri==='http://www.w3.org/2005/xpath-functions'"/>
     <gc defaultElementNS="http://www.w3.org/1999/xhtml" ns="xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="134" op="=" card="N:1" comp="CCC">
      <literal count="6">
       <str val="size"/>
       <str val="position"/>
       <str val="angle"/>
       <str val="z"/>
       <str val="label"/>
       <str val="markup"/>
      </literal>
      <attVal name="Q{}key" chk="0"/>
     </gc>
    </p.withPredicate>
    <sequence role="action" defaultElementNS="http://www.w3.org/1999/xhtml" ns="xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="135">
     <param name="Q{}retain-layout" slot="0" flags="t" as="xs:boolean?">
      <empty role="select"/>
      <treat role="conversion" as="xs:boolean" jsTest="return SaxonJS.U.Atomic.boolean.matches(item);" diag="8|0|XTTE0590|retain-layout">
       <check card="?" diag="8|0|XTTE0590|retain-layout">
        <cvUntyped to="xs:boolean">
         <data>
          <supplied slot="0"/>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </param>
     <choose line="136">
      <varRef name="retain-layout" slot="0"/>
      <nextMatch line="137" flags="t"/>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="3" rank="1" minImp="0" slots="0" flags="s" line="127" module="xproceditor-noninteractive.xsl">
    <p.withUpper role="match" axis="parent" upFirst="false">
     <p.withPredicate>
      <p.withPredicate>
       <p.nodeTest test="Q{http://www.w3.org/2005/xpath-functions}*" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1&amp;&amp;q.uri==='http://www.w3.org/2005/xpath-functions'"/>
       <fn defaultElementNS="http://www.w3.org/1999/xhtml" ns="=http://www.w3.org/2005/xpath-functions xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="127" name="not">
        <or op="or">
         <axis name="self" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
         <axis name="self" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}array)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='array';"/>
        </or>
       </fn>
      </p.withPredicate>
      <fn defaultElementNS="http://www.w3.org/1999/xhtml" ns="=http://www.w3.org/2005/xpath-functions xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="127" name="not">
       <axis name="attribute" nodeTest="attribute(Q{}key)" jsTest="return item.name==='key'"/>
      </fn>
     </p.withPredicate>
     <p.nodeTest test="element(Q{http://www.w3.org/2005/xpath-functions}array)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='array';"/>
    </p.withUpper>
    <elem role="action" defaultElementNS="http://www.w3.org/1999/xhtml" ns="=http://www.w3.org/2005/xpath-functions xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="129" name="value" nsuri="http://www.w3.org/2005/xpath-functions" flags="d" namespaces="p">
     <applyT flags="ci" bSlot="-1">
      <axis role="select" name="child" nodeTest="node()" jsTest="return true;"/>
     </applyT>
    </elem>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="1" rank="1" minImp="0" slots="1" flags="s" line="105" module="xproceditor-noninteractive.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="Q{http://www.w3.org/2005/xpath-functions}*" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1&amp;&amp;q.uri==='http://www.w3.org/2005/xpath-functions'"/>
     <axis defaultElementNS="http://www.w3.org/1999/xhtml" ns="=http://www.w3.org/2005/xpath-functions xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="105" name="attribute" nodeTest="attribute(Q{}key)" jsTest="return item.name==='key'"/>
    </p.withPredicate>
    <let role="action" defaultElementNS="http://www.w3.org/1999/xhtml" ns="=http://www.w3.org/2005/xpath-functions xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="106" var="normalized" as="xs:string" slot="0" eval="7">
     <ufCall name="Q{bogo:my}normalize-map-key" tailCall="false" bSlot="0" eval="7">
      <check card="1" diag="0|0||my:normalize-map-key">
       <cvUntyped to="xs:string">
        <attVal name="Q{}key" chk="0"/>
       </cvUntyped>
      </check>
     </ufCall>
     <compElem line="107">
      <varRef role="name" name="normalized" slot="0"/>
      <sequence role="content" line="108">
       <choose>
        <fn name="not">
         <gc op="=" card="1:1" comp="CCC">
          <attVal name="Q{}key" chk="0"/>
          <varRef name="normalized" slot="0"/>
         </gc>
        </fn>
        <att line="109" name="was" flags="l">
         <convert from="xs:untypedAtomic" to="xs:string">
          <attVal name="Q{}key" chk="0"/>
         </convert>
        </att>
       </choose>
       <applyT line="111" flags="ci" bSlot="-1">
        <axis role="select" name="child" nodeTest="node()" jsTest="return true;"/>
       </applyT>
      </sequence>
     </compElem>
    </let>
   </templateRule>
   <templateRule prec="0" prio="-0.5" seq="0" rank="0" minImp="0" slots="0" flags="s" line="99" module="xproceditor-noninteractive.xsl">
    <p.nodeTest role="match" test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;"/>
    <copy role="action" defaultElementNS="http://www.w3.org/1999/xhtml" ns="=http://www.w3.org/2005/xpath-functions xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="101" flags="cin">
     <applyT role="content" flags="c" bSlot="-1">
      <sequence role="select">
       <axis name="attribute" nodeTest="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
       <axis name="child" nodeTest="( element() | text() | comment() | processing-instruction() )" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===1 || item.nodeType===3 || item.nodeType===7 || item.nodeType===8);"/>
      </sequence>
     </applyT>
    </copy>
   </templateRule>
   <templateRule prec="0" prio="1.0" seq="8" rank="2" minImp="0" slots="0" flags="s" line="173" module="xproceditor-noninteractive.xsl">
    <p.withUpper role="match" axis="parent" upFirst="false">
     <p.nodeTest test="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
     <p.nodeTest test="document-node()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===9||item.nodeType===11);"/>
    </p.withUpper>
    <elem role="action" defaultElementNS="http://www.w3.org/1999/xhtml" ns="=http://www.w3.org/2005/xpath-functions xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="175" name="doc" nsuri="http://www.w3.org/2005/xpath-functions" flags="d" namespaces="p">
     <applyT flags="ci" bSlot="-1">
      <axis role="select" name="child" nodeTest="node()" jsTest="return true;"/>
     </applyT>
    </elem>
   </templateRule>
   <templateRule prec="0" prio="1.0" seq="7" rank="2" minImp="0" slots="0" flags="s" line="154" module="xproceditor-noninteractive.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
     <gc defaultElementNS="http://www.w3.org/1999/xhtml" ns="xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="154" op="=" card="N:1" comp="CCC">
      <literal count="3">
       <str val="ports"/>
       <str val="router"/>
       <str val="connector"/>
      </literal>
      <attVal name="Q{}key" chk="0"/>
     </gc>
    </p.withPredicate>
    <empty role="action"/>
   </templateRule>
   <templateRule prec="0" prio="1.0" seq="6" rank="2" minImp="0" slots="0" flags="s" line="150" module="xproceditor-noninteractive.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
     <gc defaultElementNS="http://www.w3.org/1999/xhtml" ns="xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="150" op="=" card="1:1" comp="CCC">
      <attVal name="Q{}key" chk="0"/>
      <str val=".label"/>
     </gc>
    </p.withPredicate>
    <applyT role="action" defaultElementNS="http://www.w3.org/1999/xhtml" ns="xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="151" flags="cti" bSlot="-1">
     <axis role="select" name="child" nodeTest="node()" jsTest="return true;"/>
    </applyT>
   </templateRule>
   <templateRule prec="0" prio="1.0" seq="5" rank="2" minImp="0" slots="2" flags="s" line="141" module="xproceditor-noninteractive.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
     <gc defaultElementNS="http://www.w3.org/1999/xhtml" ns="xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="141" op="=" card="1:1" comp="CCC">
      <attVal name="Q{}key" chk="0"/>
      <str val="attrs"/>
     </gc>
    </p.withPredicate>
    <sequence role="action" defaultElementNS="http://www.w3.org/1999/xhtml" ns="xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="142">
     <param name="Q{}retain-layout" slot="0" flags="t" as="xs:boolean?">
      <empty role="select"/>
      <treat role="conversion" as="xs:boolean" jsTest="return SaxonJS.U.Atomic.boolean.matches(item);" diag="8|0|XTTE0590|retain-layout">
       <check card="?" diag="8|0|XTTE0590|retain-layout">
        <cvUntyped to="xs:boolean">
         <data>
          <supplied slot="0"/>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </param>
     <let line="143" var="label" as="element(Q{http://www.w3.org/2005/xpath-functions}map)?" slot="1" eval="7">
      <check card="?" diag="3|0|XTTE0570|label">
       <filter flags="b">
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val=".label"/>
        </gc>
       </filter>
      </check>
      <sequence line="144">
       <applyT flags="c" bSlot="-1">
        <varRef role="select" name="label" slot="1"/>
       </applyT>
       <choose line="145">
        <varRef name="retain-layout" slot="0"/>
        <applyT line="146" flags="ct" bSlot="-1">
         <except role="select" op="except">
          <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
          <varRef name="label" slot="1"/>
         </except>
        </applyT>
       </choose>
      </sequence>
     </let>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="1.0" seq="2" rank="2" minImp="0" slots="1" flags="s" line="116" module="xproceditor-noninteractive.xsl">
    <p.withPredicate role="match">
     <p.withPredicate>
      <p.nodeTest test="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
      <fn defaultElementNS="http://www.w3.org/1999/xhtml" ns="=http://www.w3.org/2005/xpath-functions xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="116" name="empty">
       <axis name="attribute" nodeTest="attribute(Q{}key)" jsTest="return item.name==='key'"/>
      </fn>
     </p.withPredicate>
     <filter defaultElementNS="http://www.w3.org/1999/xhtml" ns="=http://www.w3.org/2005/xpath-functions xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="116" flags="b">
      <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
      <gc op="=" card="1:1" comp="CCC">
       <attVal name="Q{}key" chk="0"/>
       <str val="type"/>
      </gc>
     </filter>
    </p.withPredicate>
    <let role="action" defaultElementNS="http://www.w3.org/1999/xhtml" ns="=http://www.w3.org/2005/xpath-functions xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="117" var="normalized" as="xs:string" slot="0" eval="7">
     <ufCall name="Q{bogo:my}normalize-map-key" tailCall="false" bSlot="1" eval="7">
      <check card="1" diag="0|0||my:normalize-map-key">
       <cvUntyped to="xs:string">
        <data>
         <filter flags="b">
          <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
          <gc op="=" card="1:1" comp="CCC">
           <attVal name="Q{}key" chk="0"/>
           <str val="type"/>
          </gc>
         </filter>
        </data>
       </cvUntyped>
      </check>
     </ufCall>
     <compElem line="118">
      <varRef role="name" name="normalized" slot="0"/>
      <sequence role="content" line="119">
       <choose>
        <fn name="not">
         <gc op="=" card="N:1" comp="CCC">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="type"/>
            </gc>
           </filter>
          </data>
          <varRef name="normalized" slot="0"/>
         </gc>
        </fn>
        <att line="120" name="was" flags="l">
         <fn name="string-join">
          <convert from="xs:untypedAtomic" to="xs:string">
           <data>
            <filter flags="b">
             <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
             <gc op="=" card="1:1" comp="CCC">
              <attVal name="Q{}key" chk="0"/>
              <str val="type"/>
             </gc>
            </filter>
           </data>
          </convert>
          <str val=" "/>
         </fn>
        </att>
       </choose>
       <applyT line="122" flags="c" bSlot="-1">
        <except role="select" op="except">
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         <filter flags="b">
          <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
          <gc op="=" card="1:1" comp="CCC">
           <attVal name="Q{}key" chk="0"/>
           <str val="type"/>
          </gc>
         </filter>
        </except>
       </applyT>
      </sequence>
     </compElem>
    </let>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="10" rank="1" minImp="0" slots="0" flags="s" line="187" module="xproceditor-noninteractive.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
     <fn defaultElementNS="http://www.w3.org/1999/xhtml" ns="=http://www.w3.org/2005/xpath-functions xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="187" name="empty">
      <axis name="attribute" nodeTest="attribute(Q{}key)" jsTest="return item.name==='key'"/>
     </fn>
    </p.withPredicate>
    <elem role="action" defaultElementNS="http://www.w3.org/1999/xhtml" ns="=http://www.w3.org/2005/xpath-functions xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="189" name="anonymous-map" nsuri="http://www.w3.org/2005/xpath-functions" flags="d" namespaces="p">
     <applyT flags="ci" bSlot="-1">
      <axis role="select" name="child" nodeTest="node()" jsTest="return true;"/>
     </applyT>
    </elem>
   </templateRule>
   <templateRule prec="0" prio="1.0" seq="8" rank="2" minImp="0" slots="0" flags="s" line="173" module="xproceditor-noninteractive.xsl">
    <p.withUpper role="match" axis="parent" upFirst="false">
     <p.nodeTest test="element(Q{http://www.w3.org/2005/xpath-functions}array)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='array';"/>
     <p.nodeTest test="document-node()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===9||item.nodeType===11);"/>
    </p.withUpper>
    <elem role="action" defaultElementNS="http://www.w3.org/1999/xhtml" ns="=http://www.w3.org/2005/xpath-functions xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="175" name="doc" nsuri="http://www.w3.org/2005/xpath-functions" flags="d" namespaces="p">
     <applyT flags="ci" bSlot="-1">
      <axis role="select" name="child" nodeTest="node()" jsTest="return true;"/>
     </applyT>
    </elem>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="9" rank="1" minImp="0" slots="0" flags="s" line="180" module="xproceditor-noninteractive.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="element(Q{http://www.w3.org/2005/xpath-functions}array)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='array';"/>
     <fn defaultElementNS="http://www.w3.org/1999/xhtml" ns="=http://www.w3.org/2005/xpath-functions xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="180" name="empty">
      <axis name="attribute" nodeTest="attribute(Q{}key)" jsTest="return item.name==='key'"/>
     </fn>
    </p.withPredicate>
    <elem role="action" defaultElementNS="http://www.w3.org/1999/xhtml" ns="=http://www.w3.org/2005/xpath-functions xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="182" name="anonymous-array" nsuri="http://www.w3.org/2005/xpath-functions" flags="d" namespaces="p">
     <applyT flags="ci" bSlot="-1">
      <axis role="select" name="child" nodeTest="node()" jsTest="return true;"/>
     </applyT>
    </elem>
   </templateRule>
   <templateRule prec="0" prio="-0.5" seq="0" rank="0" minImp="0" slots="0" flags="s" line="99" module="xproceditor-noninteractive.xsl">
    <p.nodeTest role="match" test="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
    <copy role="action" defaultElementNS="http://www.w3.org/1999/xhtml" ns="=http://www.w3.org/2005/xpath-functions xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="101" flags="cin">
     <applyT role="content" flags="c" bSlot="-1">
      <sequence role="select">
       <axis name="attribute" nodeTest="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
       <axis name="child" nodeTest="( element() | text() | comment() | processing-instruction() )" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===1 || item.nodeType===3 || item.nodeType===7 || item.nodeType===8);"/>
      </sequence>
     </applyT>
    </copy>
   </templateRule>
  </mode>
 </co>
 <co id="22" binds="">
  <globalVariable name="Q{}xproc-version" type="xs:string" line="19" module="xproceditor-noninteractive.xsl" visibility="PRIVATE" jsAcceptor="return SaxonJS.U.Atomic.string.cast(val);" jsCardCheck="function c(n) {return n==1;};">
   <str val="1.0"/>
  </globalVariable>
 </co>
 <co id="13" binds="">
  <function name="Q{bogo:my}portData-for-linkEnd" line="570" module="xproceditor-noninteractive.xsl" eval="7" flags="pU" as="element(Q{http://www.w3.org/2005/xpath-functions}anonymous-map)?" slots="3">
   <arg name="source-or-target" as="element()"/>
   <let role="body" defaultElementNS="http://www.w3.org/1999/xhtml" ns="xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="575" var="vv:v1" as="xs:untypedAtomic*" slot="1" eval="4">
    <data>
     <slash simple="1">
      <varRef name="source-or-target" slot="0"/>
      <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}port)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='port';"/>
     </slash>
    </data>
    <let line="574" var="vv:v0" as="xs:untypedAtomic*" slot="2" eval="4">
     <data>
      <slash>
       <slash simple="1">
        <varRef name="source-or-target" slot="0"/>
        <axis name="parent" nodeTest="(document-node()|element())" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===9||item.nodeType===11||item.nodeType===1);"/>
       </slash>
       <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}parent)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='parent';"/>
      </slash>
     </data>
     <check line="575" card="?" diag="5|0|XTTE0780|my:portData-for-linkEnd">
      <filter line="574" flags="b">
       <slash>
        <slash simple="1">
         <treat as="element()" jsTest="return item.nodeType===1;" diag="3|0|XTTE0570|step">
          <check card="?" diag="3|0|XTTE0570|step">
           <filter flags="b">
            <fn name="key">
             <str val="step-by-id"/>
             <data>
              <slash simple="1">
               <varRef name="source-or-target" slot="0"/>
               <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}id)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='id';"/>
              </slash>
             </data>
             <fn name="root">
              <varRef name="source-or-target" slot="0"/>
             </fn>
            </fn>
            <gc op="=" card="N:1" comp="CCC">
             <varRef name="vv:v0" slot="2"/>
             <data>
              <first>
               <sequence>
                <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}parent)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='parent';"/>
                <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}stepId)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='stepId';"/>
               </sequence>
              </first>
             </data>
            </gc>
           </filter>
          </check>
         </treat>
         <axis line="575" name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}portData)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='portData';"/>
        </slash>
        <axis line="575" name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}anonymous-map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='anonymous-map';"/>
       </slash>
       <gc line="575" op="=" card="M:N" comp="CCC">
        <data>
         <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}portId)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='portId';"/>
        </data>
        <varRef name="vv:v1" slot="1"/>
       </gc>
      </filter>
     </check>
    </let>
   </let>
  </function>
 </co>
 <co id="15" binds="15">
  <function name="Q{bogo:my}plan-distance" line="512" module="xproceditor-noninteractive.xsl" eval="3" flags="pU" as="element(Q{http://www.w3.org/2005/xpath-functions}sort-before)*" slots="7">
   <arg name="plan-item" as="element(Q{http://www.w3.org/2005/xpath-functions}plan-item)"/>
   <arg name="distance" as="xs:integer"/>
   <arg name="max-distance" as="xs:integer"/>
   <let role="body" defaultElementNS="http://www.w3.org/1999/xhtml" ns="xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="521" var="vv:v1" as="element(Q{http://www.w3.org/2005/xpath-functions}connection)*" slot="3" eval="4">
    <slash ns="=http://www.w3.org/2005/xpath-functions xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" simple="1">
     <varRef name="plan-item" slot="0"/>
     <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}connection)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='connection';"/>
    </slash>
    <let ns="=http://www.w3.org/2005/xpath-functions xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="519" var="vv:v0" as="xs:string" slot="4" eval="13">
     <convert from="xs:integer" to="xs:string">
      <varRef name="distance" slot="1"/>
     </convert>
     <forEach ns="xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="518">
      <treat line="517" as="element(Q{http://www.w3.org/2005/xpath-functions}plan-item)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='plan-item';" diag="3|0|XTTE0570|connected-to">
       <fn name="key">
        <str val="plan-by-id"/>
        <data>
         <slash>
          <slash simple="1">
           <varRef name="plan-item" slot="0"/>
           <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}connection)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='connection';"/>
          </slash>
          <axis name="attribute" nodeTest="attribute(Q{}target)" jsTest="return item.name==='target'"/>
         </slash>
        </data>
        <fn name="root">
         <varRef name="plan-item" slot="0"/>
        </fn>
       </fn>
      </treat>
      <sequence ns="=http://www.w3.org/2005/xpath-functions xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="519">
       <elem name="sort-before" nsuri="http://www.w3.org/2005/xpath-functions" flags="d" namespaces="p">
        <sequence>
         <att name="target" flags="l">
          <convert from="xs:untypedAtomic" to="xs:string">
           <attVal name="Q{}id" chk="0"/>
          </convert>
         </att>
         <att name="distance" flags="l">
          <varRef name="vv:v0" slot="4"/>
         </att>
         <att line="520" name="pos" flags="l">
          <convert from="xs:integer" to="xs:string">
           <arith op="-" calc="i-i">
            <varRef name="max-distance" slot="2"/>
            <cast as="xs:integer" emptiable="1">
             <attVal name="Q{}ppos" chk="0"/>
            </cast>
           </arith>
          </convert>
         </att>
         <copyOf line="521" flags="vc">
          <let var="vv:current462308915" as="element(Q{http://www.w3.org/2005/xpath-functions}plan-item)" slot="5" eval="7">
           <dot type="element(Q{http://www.w3.org/2005/xpath-functions}plan-item)"/>
           <let var="vv:v2" as="xs:untypedAtomic?" slot="6" eval="13">
            <data>
             <slash simple="1">
              <varRef name="vv:current462308915" slot="5"/>
              <axis name="attribute" nodeTest="attribute(Q{}id)" jsTest="return item.name==='id'"/>
             </slash>
            </data>
            <slash>
             <filter flags="b">
              <varRef name="vv:v1" slot="3"/>
              <gc op="=" card="1:1" comp="CCC">
               <attVal name="Q{}target" chk="0"/>
               <varRef name="vv:v2" slot="6"/>
              </gc>
             </filter>
             <axis name="attribute" nodeTest="attribute(Q{}primary)" jsTest="return item.name==='primary'"/>
            </slash>
           </let>
          </let>
         </copyOf>
         <choose line="522">
          <fn name="exists">
           <axis name="attribute" nodeTest="attribute(Q{}container)" jsTest="return item.name==='container'"/>
          </fn>
          <att line="523" name="pos" flags="l">
           <convert from="xs:integer" to="xs:string">
            <varRef name="max-distance" slot="2"/>
           </convert>
          </att>
         </choose>
        </sequence>
       </elem>
       <choose ns="xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="526">
        <fn name="exists">
         <filter flags="b">
          <slash simple="1">
           <filter flags="b">
            <dot type="element(Q{http://www.w3.org/2005/xpath-functions}plan-item)"/>
            <fn name="empty">
             <axis name="attribute" nodeTest="attribute(Q{}container)" jsTest="return item.name==='container'"/>
            </fn>
           </filter>
           <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}connection)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='connection';"/>
          </slash>
          <fn name="exists">
           <axis name="attribute" nodeTest="attribute(Q{}primary)" jsTest="return item.name==='primary'"/>
          </fn>
         </filter>
        </fn>
        <ufCall line="527" name="Q{bogo:my}plan-distance" tailCall="false" bSlot="0" eval="7 7 6">
         <dot type="element(Q{http://www.w3.org/2005/xpath-functions}plan-item)"/>
         <arith op="+" calc="i+i">
          <varRef name="distance" slot="1"/>
          <int val="1"/>
         </arith>
         <varRef name="max-distance" slot="2"/>
        </ufCall>
       </choose>
      </sequence>
     </forEach>
    </let>
   </let>
  </function>
 </co>
 <co id="20" binds="3">
  <template name="Q{}create-xpl" flags="os" line="40" module="xproceditor.xsl" slots="0">
   <callT role="body" defaultElementNS="http://www.w3.org/1999/xhtml" ns="xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc fn=~ ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="41" name="create-xpl-noninteractive" bSlot="0" flags="t">
    <withParam name="Q{}graph-as-json" flags="c" as="xs:string">
     <treat line="43" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="8|0|XTTE0590|graph-as-json">
      <check card="1" diag="8|0|XTTE0590|graph-as-json">
       <cvUntyped to="xs:string">
        <data>
         <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}eval" type="item()*">
          <str val="JSON.stringify(allPipelines())"/>
         </ifCall>
        </data>
       </cvUntyped>
      </check>
     </treat>
    </withParam>
    <withParam name="Q{}retain-layout" flags="t" as="xs:boolean">
     <treat line="45" as="xs:boolean" jsTest="return SaxonJS.U.Atomic.boolean.matches(item);" diag="8|0|XTTE0590|retain-layout">
      <check card="1" diag="8|0|XTTE0590|retain-layout">
       <cvUntyped to="xs:boolean">
        <data>
         <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}get" type="item()*">
          <check card="?" diag="0|0||ixsl:get">
           <fn name="id">
            <str val="layout-checkbox"/>
            <check card="1" diag="0|1||fn:id">
             <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}page" type="document-node()?"/>
            </check>
           </fn>
          </check>
          <str val="checked"/>
         </ifCall>
        </data>
       </cvUntyped>
      </check>
     </treat>
    </withParam>
    <withParam name="Q{}generate-debug-info" flags="t" as="xs:boolean">
     <treat line="47" as="xs:boolean" jsTest="return SaxonJS.U.Atomic.boolean.matches(item);" diag="8|0|XTTE0590|generate-debug-info">
      <check card="1" diag="8|0|XTTE0590|generate-debug-info">
       <cvUntyped to="xs:boolean">
        <data>
         <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}get" type="item()*">
          <check card="?" diag="0|0||ixsl:get">
           <fn name="id">
            <str val="debug-checkbox"/>
            <check card="1" diag="0|1||fn:id">
             <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}page" type="document-node()?"/>
            </check>
           </fn>
          </check>
          <str val="checked"/>
         </ifCall>
        </data>
       </cvUntyped>
      </check>
     </treat>
    </withParam>
    <withParam name="Q{}optimize-for-editing" flags="t" as="xs:boolean">
     <treat line="49" as="xs:boolean" jsTest="return SaxonJS.U.Atomic.boolean.matches(item);" diag="8|0|XTTE0590|optimize-for-editing">
      <check card="1" diag="8|0|XTTE0590|optimize-for-editing">
       <cvUntyped to="xs:boolean">
        <data>
         <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}get" type="item()*">
          <check card="?" diag="0|0||ixsl:get">
           <fn name="id">
            <str val="optimize-checkbox"/>
            <check card="1" diag="0|1||fn:id">
             <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}page" type="document-node()?"/>
            </check>
           </fn>
          </check>
          <str val="checked"/>
         </ifCall>
        </data>
       </cvUntyped>
      </check>
     </treat>
    </withParam>
   </callT>
  </template>
 </co>
 <co id="23" vis="PUBLIC" binds="">
  <globalParam name="Q{}debug" type="xs:string?" line="17" module="xproceditor-noninteractive.xsl" visibility="PUBLIC" jsAcceptor="return SaxonJS.U.Atomic.string.cast(val);" jsCardCheck="function c(n) {return n&lt;=1;};">
   <str val="true"/>
  </globalParam>
 </co>
 <co id="24" binds="">
  <globalVariable name="Q{}subpipeline-element-names" type="xs:string+" line="218" module="xproceditor-noninteractive.xsl" visibility="PRIVATE" jsAcceptor="return SaxonJS.U.Atomic.string.cast(val);" jsCardCheck="function c(n) {return n&gt;=1;};">
   <literal count="3">
    <str val="xproc.Atomic"/>
    <str val="xproc.Compound"/>
    <str val="xproc.Variable"/>
   </literal>
  </globalVariable>
 </co>
 <co id="25" binds="">
  <mode onNo="TC" flags="dW" patternSlots="0">
   <templateRule prec="1" prio="-0.5" seq="0" rank="0" minImp="0" slots="0" flags="s" line="17" module="xproceditor.xsl">
    <p.nodeTest role="match" test="document-node()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===9||item.nodeType===11);"/>
    <empty role="action"/>
   </templateRule>
  </mode>
 </co>
 <overridden/>
 <key name="Q{}plan-by-id" line="532" module="xproceditor-noninteractive.xsl" binds="" flags="u">
  <p.nodeTest test="element(Q{http://www.w3.org/2005/xpath-functions}plan-item)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='plan-item';"/>
  <attVal defaultElementNS="http://www.w3.org/1999/xhtml" ns="xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="532" name="Q{}id" chk="0"/>
 </key>
 <key name="Q{}step-by-id" line="207" module="xproceditor-noninteractive.xsl" binds="" flags="u">
  <p.withPredicate>
   <p.nodeTest test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;"/>
   <axis defaultElementNS="http://www.w3.org/1999/xhtml" ns="xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="207" name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}stepId)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='stepId';"/>
  </p.withPredicate>
  <data defaultElementNS="http://www.w3.org/1999/xhtml" ns="xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="207">
   <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}stepId)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='stepId';"/>
  </data>
 </key>
 <key name="Q{}connect" line="205" module="xproceditor-noninteractive.xsl" binds="" flags="u">
  <p.nodeTest test="element(Q{http://www.w3.org/2005/xpath-functions}devs.StandLink)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='devs.StandLink';"/>
  <data defaultElementNS="http://www.w3.org/1999/xhtml" ns="xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="205">
   <slash>
    <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}source)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='source';"/>
    <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}id)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='id';"/>
   </slash>
  </data>
 </key>
 <key name="Q{}connect-target" line="206" module="xproceditor-noninteractive.xsl" binds="" flags="u">
  <p.nodeTest test="element(Q{http://www.w3.org/2005/xpath-functions}devs.StandLink)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='devs.StandLink';"/>
  <data defaultElementNS="http://www.w3.org/1999/xhtml" ns="xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="206">
   <slash>
    <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}target)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='target';"/>
    <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}id)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='id';"/>
   </slash>
  </data>
 </key>
 <key name="Q{}options" line="204" module="xproceditor-noninteractive.xsl" binds="" flags="u">
  <p.nodeTest test="element(Q{http://www.w3.org/2005/xpath-functions}xproc.Option)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='xproc.Option';"/>
  <data defaultElementNS="http://www.w3.org/1999/xhtml" ns="xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="204">
   <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}parent)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='parent';"/>
  </data>
 </key>
 <output>
  <property name="indent" value="yes"/>
  <property name="{http://saxon.sf.net/}stylesheet-version" value="30"/>
  <property name="method" value="xml"/>
 </output>
 <decimalFormat/>
</package>
<?Σ 123e7f85?>
